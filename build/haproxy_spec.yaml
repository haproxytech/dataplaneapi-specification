---
swagger: "2.0"
info:
  title: HAProxy Data Plane API
  description: |
    API for editing and managing haproxy instances. Provides process information, configuration management,
    haproxy stats and logs.
  version: '2.0'
  contact:
    name: HAProxy Support
    url: https://my.haproxy.com/portal/cust/login
    email: support@haproxy.com
externalDocs:
  url: https://cbonte.github.io/haproxy-dconv/
  description: HAProxy Documentation
definitions:
  site:
      additionalProperties: false
      description: |
        Site configuration. Sites are considered as one service and all farms connected to that service.
        Farms are connected to service using use-backend and default_backend directives. Sites let you
        configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
        endpoints.
      example:
        farms:
        - balance:
            algorithm: roundrobin
          mode: http
          name: www_backend
          servers:
          - address: 127.0.1.1
            name: www_server
            port: 4567
            weight: 30
          - address: 127.0.1.2
            name: www_server_new
            port: 4567
            weight: 70
          use_as: default
        name: test_site
        service:
          http_connection_mode: httpclose
          listeners:
          - address: 127.0.0.1
            name: test_listener
            port: 80
          - address: 127.0.0.1
            name: test_listener_2
            port: 8080
          maxconn: 2000
          mode: http
      properties:
        farms:
          items:
            properties:
              balance:
                $ref: '#/definitions/balance'
              cond:
                enum:
                - if
                - unless
                type: string
                x-dependency:
                  use_as:
                    required: true
                    value: conditional
                x-display-name: Condition
              cond_test:
                type: string
                x-dependency:
                  use_as:
                    required: true
                    value: conditional
                x-display-name: Condition Test
              forwardfor:
                $ref: '#/definitions/forwardfor'
              mode:
                enum:
                - http
                - tcp
                type: string
              name:
                pattern: ^[A-Za-z0-9-_.:]+$
                type: string
                x-nullable: false
              servers:
                items:
                  $ref: '#/definitions/server'
                type: array
              use_as:
                enum:
                - default
                - conditional
                type: string
                x-nullable: false
            required:
            - name
            - use_as
            type: object
            x-go-name: SiteFarm
          type: array
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        service:
          properties:
            http_connection_mode:
              enum:
              - http-tunnel
              - httpclose
              - forced-close
              - http-server-close
              - http-keep-alive
              type: string
              x-dependency:
                mode:
                  value: http
              x-display-name: HTTP Connection Mode
            listeners:
              items:
                $ref: '#/definitions/bind'
              type: array
            maxconn:
              type: integer
              x-display-name: Max Connections
              x-nullable: true
            mode:
              enum:
              - http
              - tcp
              type: string
          type: object
      required:
      - name
      title: Site
      type: object
  sites:
    title: Sites
    description: |
      Sites array. Sites are considered as one service and all farms connected to that service.
      Farms are connected to service using use-backend and default_backend directives. Sites let you
      configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
      endpoints.
    type: array
    items:
      $ref: "#/definitions/site"
  global:
      additionalProperties: false
      description: HAProxy global configuration
      properties:
        chroot:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Chroot
        cpu_maps:
          items:
            properties:
              cpu_set:
                type: string
                x-display-name: CPU Set
              process:
                type: string
                x-display-name: Process/Thread Set
            required:
            - process
            - cpu_set
            type: object
            x-go-name: CPUMap
          type: array
          x-display-name: CPU Maps
          x-go-name: CPUMaps
        daemon:
          enum:
          - enabled
          - disabled
          type: string
        external_check:
          type: boolean
          x-display-name: External Check
        group:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Group
        log_send_hostname:
          properties:
            enabled:
              enum:
              - enabled
              - disabled
              type: string
            param:
              pattern: ^[^\s]+$
              type: string
          required:
          - enabled
          type: object
          x-display-name: Log Send Hostname
        lua_loads:
          items:
            properties:
              file:
                pattern: ^[^\s]+$
                type: string
            required:
            - file
            type: object
            x-go-name: LuaLoad
          type: array
        master-worker:
          type: boolean
          x-display-name: Master Worker Mode
        maxconn:
          type: integer
          x-display-name: Max Connections
        nbproc:
          type: integer
          x-display-name: Number of Processes
        nbthread:
          type: integer
          x-display-name: Number of Threads
        pidfile:
          type: string
          x-display-name: PID File
        runtime_apis:
          items:
            properties:
              address:
                pattern: ^[^\s]+$
                type: string
              exposeFdListeners:
                type: boolean
                x-display-name: Expose FD Listeners
              level:
                enum:
                - user
                - operator
                - admin
                type: string
              mode:
                pattern: ^[^\s]+$
                type: string
              process:
                pattern: ^[^\s]+$
                type: string
            required:
            - address
            type: object
            x-go-name: RuntimeAPI
          type: array
          x-display-name: Runtime APIs
          x-go-name: RuntimeAPIs
        ssl_default_bind_ciphers:
          type: string
          x-display-name: SSL Default Bind Ciphers
        ssl_default_bind_ciphersuites:
          type: string
          x-display-name: SSL Default Bind Ciphersuites
        ssl_default_bind_options:
          type: string
          x-display-name: SSL Default Bind Options
        ssl_default_server_ciphers:
          type: string
          x-display-name: SSL Default Server Ciphers
        ssl_default_server_ciphersuites:
          type: string
          x-display-name: SSL Default Server Ciphersuites
        ssl_default_server_options:
          type: string
          x-display-name: SSL Default Server Options
        ssl_mode_async:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Asynchronous TLS I/O operations
        stats_timeout:
          type: integer
          x-nullable: true
        tune_ssl_default_dh_param:
          type: integer
          x-display-name: SSL Default DH Parameter Size
        user:
          pattern: ^[^\s]+$
          type: string
          x-display-name: User
      title: Global
      type: object
  defaults:
      additionalProperties: false
      description: HAProxy defaults configuration
      properties:
        abortonclose:
          enum:
          - enabled
          - disabled
          type: string
        adv_check:
          enum:
          - ssl-hello-chk
          - smtpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - tcp-check
          - redis-check
          - httpchk
          type: string
          x-display-name: Advanced Check
        allbackups:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: All Backups
        balance:
          $ref: '#/definitions/balance'
        bind_process:
          pattern: ^[^\s]+$
          type: string
        check_timeout:
          type: integer
          x-nullable: true
        clflog:
          type: boolean
          x-display-name: CLF Log
        client_timeout:
          type: integer
          x-nullable: true
        clitcpka:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Client TCP Keep Alive
        connect_timeout:
          type: integer
          x-nullable: true
        contstats:
          enum:
          - enabled
          type: string
          x-display-name: Continuous Statistics
        cookie:
          $ref: '#/definitions/cookie'
        default_backend:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-dynamic-enum:
            operation: getBackends
            property: name
        default_server:
          $ref: '#/definitions/default_server'
        dontlognull:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Don't Log Null
        error_files:
          items:
            $ref: '#/definitions/errorfile'
          type: array
          x-go-name: ErrorFiles
        external_check:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: External Check
        external_check_command:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Command
        external_check_path:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Path
        forwardfor:
          $ref: '#/definitions/forwardfor'
        http-buffer-request:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: HTTP bufferrequest
        http-check:
          $ref: '#/definitions/http-check'
        http-use-htx:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: HTTP Use HTX
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
        http_keep_alive_timeout:
          type: integer
          x-nullable: true
        http_pretend_keepalive:
          enum:
          - enabled
          - disabled
          type: string
        http_request_timeout:
          type: integer
          x-nullable: true
        http_reuse:
          enum:
          - aggressive
          - always
          - never
          - safe
          type: string
        httpchk_params:
          $ref: '#/definitions/httpchk_params'
        httplog:
          type: boolean
          x-display-name: HTTP Log
        log_format:
          type: string
        log_format_sd:
          type: string
          x-display-name: Log Format SD
        log_separate_errors:
          enum:
          - enabled
          - disabled
          type: string
        log_tag:
          pattern: ^[^\s]+$
          type: string
        logasap:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Log ASAP
        maxconn:
          type: integer
          x-display-name: Max Connections
          x-nullable: true
        mode:
          enum:
          - tcp
          - http
          type: string
        monitor_uri:
          $ref: '#/definitions/monitor_uri'
        mysql_check_params:
          $ref: '#/definitions/mysql_check_params'
        pgsql_check_params:
          $ref: '#/definitions/pgsql_check_params'
        queue_timeout:
          type: integer
          x-nullable: true
        redispatch:
          $ref: '#/definitions/redispatch'
        retries:
          type: integer
          x-nullable: true
        server_timeout:
          type: integer
          x-nullable: true
        smtpchk_params:
          $ref: '#/definitions/smtpchk_params'
        stats_options:
          $ref: '#/definitions/stats_options'
        tcplog:
          type: boolean
          x-display-name: TCP Log
        tunnel_timeout:
          type: integer
          x-nullable: true
        unique_id_format:
          type: string
          x-display-name: Unique ID format
        unique_id_header:
          type: string
          x-dependency:
            unique_id_format:
              required: true
          x-display-name: Unique ID header
      title: Defaults
      type: object
  frontend:
      additionalProperties: false
      description: HAProxy frontend configuration
      example:
        default_backend: test_backend
        http_connection_mode: http-keep-alive
        maxconn: 2000
        mode: http
        name: test_frontend
      properties:
        bind_process:
          pattern: ^[^\s]+$
          type: string
        clflog:
          type: boolean
          x-dependency:
            mode:
              value: http
          x-display-name: CLF Log
        client_timeout:
          type: integer
          x-nullable: true
        clitcpka:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: tcp
          x-display-name: Client TCP Keep Alive
        contstats:
          enum:
          - enabled
          type: string
          x-display-name: Continous Statistics
        default_backend:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-dynamic-enum:
            operation: getBackends
            property: name
        dontlognull:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Don't Log Null
        forwardfor:
          $ref: '#/definitions/forwardfor'
          x-dependency:
            mode:
              value: http
        http-buffer-request:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: HTTP bufferrequest
        http-use-htx:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: http
          x-display-name: HTTP Use HTX
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
          x-dependency:
            mode:
              value: http
        http_keep_alive_timeout:
          type: integer
          x-dependency:
            mode:
              value: http
          x-nullable: true
        http_request_timeout:
          type: integer
          x-dependency:
            mode:
              value: http
          x-nullable: true
        httplog:
          type: boolean
          x-dependency:
            mode:
              value: http
          x-display-name: HTTP Log
        log_format:
          type: string
        log_format_sd:
          type: string
          x-display-name: Log Format SD
        log_separate_errors:
          enum:
          - enabled
          - disabled
          type: string
        log_tag:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
        logasap:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: Log ASAP
        maxconn:
          type: integer
          x-display-name: Max Connections
          x-nullable: true
        mode:
          enum:
          - http
          - tcp
          type: string
        monitor_fail:
          $ref: '#/definitions/monitor_fail'
        monitor_uri:
          $ref: '#/definitions/monitor_uri'
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        stats_options:
          $ref: '#/definitions/stats_options'
        tcplog:
          type: boolean
          x-dependency:
            mode:
              value: tcp
          x-display-name: TCP Log
        unique_id_format:
          type: string
          x-display-name: Unique ID format
        unique_id_header:
          type: string
          x-dependency:
            unique_id_format:
              required: true
          x-display-name: Unique ID header
      required:
      - name
      title: Frontend
      type: object
  frontends:
    title: Frontends
    description: HAProxy frontends array
    type: array
    items:
      $ref: '#/definitions/frontend'
  backend:
      additionalProperties: false
      description: HAProxy backend configuration
      example:
        adv_check: httpchk
        balance:
          algorithm: roundrobin
        forwardfor:
          enabled: enabled
        httpchk_params:
          method: GET
          uri: /check
          version: HTTP/1.1
        mode: http
        name: test_backend
      properties:
        abortonclose:
          enum:
          - enabled
          - disabled
          type: string
        adv_check:
          enum:
          - ssl-hello-chk
          - smtpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - tcp-check
          - redis-check
          - httpchk
          type: string
          x-display-name: Advanced Check
        allbackups:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: All Backups
        balance:
          $ref: '#/definitions/balance'
        bind_process:
          pattern: ^[^\s]+$
          type: string
        check_timeout:
          type: integer
          x-nullable: true
        connect_timeout:
          type: integer
          x-nullable: true
        cookie:
          $ref: '#/definitions/cookie'
          x-dependency:
            mode:
              value: http
        default_server:
          $ref: '#/definitions/default_server'
        external_check:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: External Check
        external_check_command:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Command
        external_check_path:
          pattern: ^[^\s]+$
          type: string
          x-display-name: External Check Path
        forwardfor:
          $ref: '#/definitions/forwardfor'
          x-dependency:
            mode:
              value: http
        hash_type:
          properties:
            function:
              enum:
              - sdbm
              - djb2
              - wt6
              - crc32
              type: string
            method:
              enum:
              - map-based
              - consistent
              type: string
            modifier:
              enum:
              - avalanche
              type: string
          type: object
        http-buffer-request:
          enum:
          - enabled
          - disabled
          type: string
          x-display-name: HTTP bufferrequest
        http-check:
          $ref: '#/definitions/http-check'
        http-use-htx:
          enum:
          - enabled
          - disabled
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            mode:
              value: http
        http_connection_mode:
          enum:
          - httpclose
          - http-server-close
          - http-keep-alive
          type: string
          x-dependency:
            mode:
              value: http
        http_keep_alive_timeout:
          type: integer
          x-dependency:
            mode:
              value: http
          x-nullable: true
        http_pretend_keepalive:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            mode:
              value: http
        http_request_timeout:
          type: integer
          x-dependency:
            mode:
              value: http
          x-nullable: true
        http_reuse:
          enum:
          - aggressive
          - always
          - never
          - safe
          type: string
          x-dependency:
            mode:
              value: http
        httpchk_params:
          $ref: '#/definitions/httpchk_params'
          x-dependency:
            mode:
              value: http
        log_tag:
          pattern: ^[^\s]+$
          type: string
        mode:
          enum:
          - http
          - tcp
          type: string
        mysql_check_params:
          $ref: '#/definitions/mysql_check_params'
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        pgsql_check_params:
          $ref: '#/definitions/pgsql_check_params'
        queue_timeout:
          type: integer
          x-nullable: true
        redispatch:
          $ref: '#/definitions/redispatch'
        retries:
          type: integer
          x-nullable: true
        server_timeout:
          type: integer
          x-nullable: true
        smtpchk_params:
          $ref: '#/definitions/smtpchk_params'
        stats_options:
          $ref: '#/definitions/stats_options'
        stick_table:
          properties:
            expire:
              type: integer
              x-nullable: true
            keylen:
              type: integer
              x-display-name: Key Length
              x-nullable: true
            nopurge:
              type: boolean
              x-display-name: No Purge
            peers:
              pattern: ^[^\s]+$
              type: string
            size:
              type: integer
              x-nullable: true
            store:
              pattern: ^[^\s]+$
              type: string
            type:
              enum:
              - ip
              - ipv6
              - integer
              - string
              - binary
              type: string
          type: object
        tunnel_timeout:
          type: integer
          x-nullable: true
      required:
      - name
      title: Backend
      type: object
  backends:
    title: Backends
    description: HAProxy backends array
    type: array
    items:
      $ref: '#/definitions/backend'
  peer_section:
      additionalProperties: false
      description: HAProxy peer_section configuration
      properties:
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
      required:
      - name
      title: Peer Section
      type: object
  peer_sections:
    title: Peer_Section
    description: HAProxy peer_section array
    type: array
    items:
      $ref: '#/definitions/peer_section'
  peer_entry:
      description: Peer Entry from peers table
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
      required:
      - name
      - address
      - port
      title: Peer Entry
      type: object
  peer_entries:
    title: Peer entries
    description: HAProxy peer entries array
    type: array
    items:
      $ref: '#/definitions/peer_entry'
  bind:
      additionalProperties: false
      description: HAProxy frontend bind configuration
      example:
        address: 127.0.0.1
        name: http
        port: 80
      properties:
        accept_netscaler_cip:
          type: integer
        accept_proxy:
          type: boolean
        address:
          pattern: ^[^\s]+$
          type: string
        allow_0rtt:
          type: boolean
        alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: ALPN Protocols
        backlog:
          type: string
        ca_ignore_err:
          type: string
          x-dependency:
            ssl:
              value: true
        ca_sign_file:
          type: string
          x-dependency:
            ssl:
              value: true
        ca_sign_pass:
          type: string
          x-dependency:
            ssl:
              value: true
          x-display-name: Passphrase
        ca_verify_file:
          type: string
          x-dependency:
            ca_file:
              value: true
        ciphers:
          type: string
          x-dependency:
            ssl:
              value: true
        ciphersuites:
          type: string
          x-dependency:
            ssl:
              value: true
        crl_file:
          type: string
          x-dependency:
            ssl:
              value: true
        crt_ignore_err:
          type: string
          x-dependency:
            ssl:
              value: true
        crt_list:
          type: string
          x-dependency:
            ssl:
              value: true
        curves:
          type: string
          x-dependency:
            ssl:
              value: true
        defer_accept:
          type: boolean
        ecdhe:
          type: string
          x-dependency:
            ssl:
              value: true
        expose_fd_listeners:
          type: boolean
        force_sslv3:
          type: boolean
        force_tlsv10:
          type: boolean
        force_tlsv11:
          type: boolean
        force_tlsv12:
          type: boolean
        force_tlsv13:
          type: boolean
        generate_certificates:
          type: boolean
          x-dependency:
            ssl:
              value: true
        gid:
          type: integer
          x-display-name: Group ID
        group:
          type: string
          x-display-name: Group name
        id:
          type: string
          x-display-name: Socket ID
        interface:
          type: string
        level:
          enum:
          - user
          - operator
          - admin
          type: string
        maxconn:
          type: integer
        mode:
          type: string
        mss:
          type: string
        name:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        namespace:
          type: string
        nice:
          type: integer
        no_ca_names:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_sslv3:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_tls_tickets:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_tlsv10:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_tlsv11:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_tlsv12:
          type: boolean
          x-dependency:
            ssl:
              value: true
        no_tlsv13:
          type: boolean
          x-dependency:
            ssl:
              value: true
        npn:
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        port-range-end:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        prefer_client_ciphers:
          type: boolean
        process:
          pattern: ^[^\s]+$
          type: string
        proto:
          type: string
          x-display-name: Protocol name
        severity_output:
          enum:
          - none
          - number
          - string
          type: string
          x-display-name: Format
        ssl:
          type: boolean
        ssl_cafile:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: true
          x-display-name: SSL CA File
        ssl_certificate:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: true
        ssl_max_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        ssl_min_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        strict_sni:
          type: boolean
          x-dependency:
            ssl:
              value: true
        tcp_user_timeout:
          type: integer
          x-nullable: true
        tfo:
          type: boolean
        tls_ticket_keys:
          type: string
        transparent:
          type: boolean
        uid:
          type: string
        user:
          type: string
        v4v6:
          type: boolean
        v6only:
          type: boolean
        verify:
          enum:
          - none
          - optional
          - required
          type: string
          x-dependency:
            ssl:
              value: enabled
      required:
      - name
      title: Bind
      type: object
  binds:
    title: Binds
    description: HAProxy frontend binds array (corresponds to bind directives)
    type: array
    items:
      $ref: '#/definitions/bind'
  server:
      additionalProperties: false
      description: HAProxy backend server configuration
      example:
        address: 10.1.1.1
        check: enabled
        name: www
        port: 8080
        weight: 80
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        agent-addr:
          pattern: ^[^\s]+$
          type: string
        agent-check:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            agent-port:
              required: true
        agent-inter:
          type: integer
          x-nullable: true
        agent-port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        agent-send:
          type: string
        allow_0rtt:
          type: boolean
        alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: ALPN Protocols
        backup:
          enum:
          - enabled
          - disabled
          type: string
        check:
          enum:
          - enabled
          - disabled
          type: string
        check-sni:
          pattern: ^[^\s]+$
          type: string
        check-ssl:
          enum:
          - enabled
          - disabled
          type: string
        check_alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Protocols
        check_proto:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Name
        check_via_socks4:
          enum:
          - enabled
          - disabled
          type: string
        ciphers:
          type: string
          x-dependency:
            ssl:
              value: enabled
        ciphersuites:
          type: string
          x-dependency:
            ssl:
              value: enabled
        cookie:
          pattern: ^[^\s]+$
          type: string
        crl_file:
          type: string
          x-dependency:
            ssl:
              value: enabled
        downinter:
          type: integer
          x-nullable: true
        error_limit:
          type: integer
          x-display-name: Error count
        fall:
          type: integer
          x-display-name: Nr. of consecutive failed checks
          x-nullable: true
        fastinter:
          type: integer
          x-nullable: true
        force_sslv3:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv10:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv11:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv12:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv13:
          enum:
          - enabled
          - disabled
          type: string
        health_check_port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        id:
          type: integer
          x-nullable: true
        init-addr:
          pattern: ^[^\s]+$
          type: string
          x-nullable: true
        inter:
          type: integer
          x-nullable: true
        log_proto:
          enum:
          - legacy
          - octet-count
          type: string
        maintenance:
          enum:
          - enabled
          - disabled
          type: string
        max_reuse:
          type: integer
          x-nullable: true
        maxconn:
          type: integer
          x-display-name: Max Concurrent Connections
          x-nullable: true
        maxqueue:
          type: integer
          x-display-name: Max Number of Connections
          x-nullable: true
        minconn:
          type: integer
          x-nullable: true
        name:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        namespace:
          type: string
        no_sslv3:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv10:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv11:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv12:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv13:
          enum:
          - enabled
          - disabled
          type: string
        no_verifyhost:
          enum:
          - enabled
          - disabled
          type: string
        npn:
          type: string
          x-dependency:
            ssl:
              value: enabled
        observe:
          enum:
          - layer4
          - layer7
          type: string
          x-dependency:
            ssl:
              value: enabled
        on-error:
          enum:
          - fastinter
          - fail-check
          - sudden-death
          - mark-down
          type: string
        on-marked-down:
          enum:
          - shutdown-sessions
          type: string
        on-marked-up:
          enum:
          - shutdown-backup-sessions
          type: string
        pool_low_conn:
          type: integer
          x-nullable: true
        pool_max_conn:
          type: integer
          x-nullable: true
        pool_purge_delay:
          type: integer
          x-nullable: true
        port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        proto:
          pattern: ^[^\s]+$
          type: string
        proxy-v2-options:
          items:
            enum:
            - ssl
            - cert-cn
            - ssl-cipher
            - cert-sig
            - cert-key
            - authority
            - crc32c
            - unique-id
            type: string
          type: array
        redir:
          type: string
          x-display-name: Prefix
        resolve-net:
          pattern: ^[^,\s][^\,]*[^,\s]*$
          type: string
          x-dependency:
            resolvers:
              required: true
        resolve-prefer:
          enum:
          - ipv4
          - ipv6
          type: string
          x-dependency:
            resolvers:
              required: true
        resolve_opts:
          pattern: ^[^,\s][^\,]*[^,\s]*$
          type: string
        resolvers:
          pattern: ^[^\s]+$
          type: string
          x-dynamic-enum:
            operation: getResolvers
            property: name
        rise:
          type: integer
          x-nullable: true
        send-proxy:
          enum:
          - enabled
          - disabled
          type: string
        send-proxy-v2:
          enum:
          - enabled
          - disabled
          type: string
        send_proxy_v2_ssl:
          enum:
          - enabled
          - disabled
          type: string
        send_proxy_v2_ssl_cn:
          enum:
          - enabled
          - disabled
          type: string
        slowstart:
          type: integer
          x-nullable: true
        sni:
          pattern: ^[^\s]+$
          type: string
        socks4:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            check-via-socks4:
              required: true
        source:
          type: string
        ssl:
          enum:
          - enabled
          - disabled
          type: string
        ssl_cafile:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: enabled
          x-display-name: SSL CA File
        ssl_certificate:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: enabled
        ssl_max_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        ssl_min_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        ssl_reuse:
          enum:
          - enabled
          - disabled
          type: string
        stick:
          enum:
          - enabled
          - disabled
          type: string
        tcp_ut:
          type: integer
        tfo:
          enum:
          - enabled
          - disabled
          type: string
        tls_tickets:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            ssl:
              value: enabled
        track:
          type: string
        verify:
          enum:
          - none
          - required
          type: string
          x-dependency:
            ssl:
              value: enabled
        verifyhost:
          type: string
          x-dependency:
            ssl:
              value: enabled
            verify:
              value: required
        weight:
          type: integer
          x-nullable: true
      required:
      - name
      title: Server
      type: object
  servers:
    title: Servers
    description: HAProxy backend servers array
    type: array
    items:
      $ref: '#/definitions/server'
  http_request_rule:
      additionalProperties: false
      description: HAProxy HTTP request rule configuration (corresponds to http-request
        directives)
      example:
        cond: unless
        cond_test: '{ src 192.168.0.0/16 }'
        hdr_format: '%T'
        hdr_name: X-Haproxy-Current-Date
        index: 0
        type: add-header
      properties:
        acl_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACL File
        acl_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACL Key Format
        auth_realm:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: auth
          x-display-name: Authentication Realm
        cache_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: cache-use
          x-display-name: Cache Name
        capture_id:
          type: integer
          x-dependency:
            type:
              required: true
              value: capture
          x-display-name: Capture SlotID
          x-nullable: true
        capture_len:
          type: integer
          x-dependency:
            type:
              required: true
              value: capture
          x-display-name: Capture Len
        capture_sample:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: capture
          x-display-name: Capture Sample
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        deny_status:
          enum:
          - 200
          - 400
          - 403
          - 405
          - 408
          - 425
          - 429
          - 500
          - 502
          - 503
          - 504
          type: integer
          x-dependency:
            type:
              value:
              - deny
              - tarpit
          x-nullable: true
        expr:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - do-resolve
              - set-dst
              - set-dst-port
              - set-priority-class
              - set-priority-offset
              - set-src
              - set-src-port
          x-display-name: Standard HAProxy expression
        hdr_format:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
              - set-header
              - add-header
          x-display-name: Header Format
        hdr_match:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
          x-display-name: Header Match
        hdr_name:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
          x-display-name: Header Name
        hint_format:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: early-hint
          x-display-name: Hint Format
        hint_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: early-hint
          x-display-name: Hint Name
        index:
          type: integer
          x-nullable: true
        log_level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
          type: string
          x-dependency:
            type:
              required: true
              value: set-log-level
        lua_action:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: lua
        lua_params:
          type: string
          x-dependency:
            type:
              value: lua
        map_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-map
              - del-map
        map_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-map
              - del-map
          x-display-name: Map Key Format
        map_valuefmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-map
          x-display-name: Map Value Format
        mark_value:
          pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
          type: string
          x-dependency:
            type:
              required: true
              value: set-mark
          x-display-name: Mark Value
        method_fmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-method
        nice_value:
          maximum: 1024
          minimum: -1024
          type: integer
          x-dependency:
            type:
              required: true
              value: set-nice
          x-display-name: Nice Value
          x-nullable: false
        path_fmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-path
              - replace-path
        path_match:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-path
              - replace-path
        protocol:
          enum:
          - ipv4
          - ipv6
          type: string
          x-dependency:
            type:
              required: false
              value: do-resolve
          x-display-name: Protocol
        query-fmt:
          type: string
          x-dependency:
            type:
              required: true
              value: set-query
        redir_code:
          enum:
          - 301
          - 302
          - 303
          - 307
          - 308
          type: integer
          x-dependency:
            type:
              value: redirect
          x-display-name: Redirect Code
          x-nullable: true
        redir_option:
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Option
        redir_type:
          enum:
          - location
          - prefix
          - scheme
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Type
        redir_value:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Value
        resolvers:
          type: string
          x-dependency:
            type:
              required: true
              value: do-resolve
          x-display-name: Resolvers
        sc_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: sc-set-gpt0
          x-display-name: ScSet Expression Value
        sc_id:
          type: integer
          x-dependency:
            type:
              required: true
              value:
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt0
        sc_int:
          type: integer
          x-dependency:
            type:
              required: true
              value: sc-set-gpt0
          x-display-name: ScSet Integer Value
          x-nullable: true
        service_name:
          type: string
          x-dependency:
            type:
              required: true
              value: use-service
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
          x-display-name: SPOE Engine
        spoe_group:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
          x-display-name: SPOE Group
        strict_mode:
          enum:
          - "on"
          - "off"
          type: string
          x-dependency:
            type:
              required: true
              value: strict-mode
        tos_value:
          pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
          type: string
          x-dependency:
            type:
              required: true
              value: set-tos
          x-display-name: Tos Value
        track-sc0-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc0
          x-display-name: track-sc0 Key
        track-sc0-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc0
          x-display-name: track-sc0 Table
        track-sc1-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc1
          x-display-name: track-sc1 Key
        track-sc1-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc1
          x-display-name: track-sc1 Table
        track-sc2-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc2
          x-display-name: track-sc2 Key
        track-sc2-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc2
          x-display-name: track-sc2 Table
        type:
          enum:
          - allow
          - deny
          - auth
          - redirect
          - tarpit
          - add-header
          - replace-header
          - replace-value
          - del-header
          - set-header
          - set-log-level
          - set-path
          - replace-path
          - set-query
          - set-uri
          - set-var
          - send-spoe-group
          - add-acl
          - del-acl
          - capture
          - track-sc0
          - track-sc1
          - track-sc2
          - set-map
          - del-map
          - cache-use
          - disable-l7-retry
          - early-hint
          - replace-uri
          - sc-inc-gpc0
          - sc-inc-gpc1
          - do-resolve
          - set-dst
          - set-dst-port
          - sc-set-gpt0
          - set-mark
          - set-nice
          - set-method
          - set-priority-class
          - set-priority-offset
          - set-src
          - set-src-por
          - wait-for-handshake
          - set-tos
          - silent-drop
          - unset-var
          - strict-mode
          - lua
          - use-service
          type: string
          x-nullable: false
        uri-fmt:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-uri
              - replace-uri
        uri-match:
          type: string
          x-dependency:
            type:
              required: true
              value: replace-uri
        var_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
          x-display-name: Var Expression
        var_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-var
              - do-resolve
              - unset-var
        var_scope:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-var
              - unset-var
      required:
      - index
      - type
      title: HTTP Request Rule
      type: object
  http_request_rules:
    title: HTTP Request Rules Array
    description: HAProxy HTTP request rules array (corresponds to http-request directives)
    type: array
    items:
      $ref: '#/definitions/http_request_rule'
  http_response_rule:
      additionalProperties: false
      description: HAProxy HTTP response rule configuration (corresponds to http-response
        directives)
      example:
        cond: unless
        cond_test: '{ src 192.168.0.0/16 }'
        hdr_format: '%T'
        hdr_name: X-Haproxy-Current-Date
        index: 0
        type: add-header
      properties:
        acl_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
        acl_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-acl
              - del-acl
          x-display-name: ACK Key Format
        capture_id:
          type: integer
          x-dependency:
            type:
              required: true
              value: capture
          x-display-name: Capture SlotID
          x-nullable: true
        capture_sample:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: capture
          x-display-name: Capture Sample
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        hdr_format:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
              - set-header
              - add-header
          x-display-name: Header Format
        hdr_match:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - replace-header
              - replace-value
          x-display-name: Header Match
        hdr_name:
          type: string
          x-dependency:
            type:
              required: true
              value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
          x-display-name: Header Name
        index:
          type: integer
          x-nullable: true
        log_level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
          type: string
          x-dependency:
            type:
              required: true
              value: set-log-level
        lua_action:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: lua
        lua_params:
          type: string
          x-dependency:
            type:
              value: lua
        map_file:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-map
              - del-map
        map_keyfmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-map
              - del-map
          x-display-name: Map Key Format
        map_valuefmt:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: set-map
          x-display-name: Map Value Format
        mark_value:
          pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
          type: string
          x-dependency:
            type:
              required: true
              value: set-mark
          x-display-name: Mark Value
        nice_value:
          maximum: 1024
          minimum: -1024
          type: integer
          x-dependency:
            type:
              required: true
              value: set-nice
          x-display-name: Nice Value
          x-nullable: false
        redir_code:
          enum:
          - 301
          - 302
          - 303
          - 307
          - 308
          type: integer
          x-dependency:
            type:
              value: redirect
          x-display-name: Redirect Code
          x-nullable: true
        redir_option:
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Option
        redir_type:
          enum:
          - location
          - prefix
          - scheme
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Type
        redir_value:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: redirect
          x-display-name: Redirect Value
        sc_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: sc-set-gpt0
          x-display-name: ScSet Expression Value
        sc_id:
          type: integer
          x-dependency:
            type:
              required: true
              value:
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt0
        sc_int:
          type: integer
          x-dependency:
            type:
              required: true
              value: sc-set-gpt0
          x-display-name: ScSet Integer Value
          x-nullable: true
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
        spoe_group:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: send-spoe-group
        status:
          maximum: 999
          minimum: 100
          type: integer
          x-dependency:
            type:
              required: true
              value: set-status
          x-nullable: false
        status_reason:
          type: string
          x-dependency:
            type:
              value: set-status
        strict_mode:
          enum:
          - "on"
          - "off"
          type: string
          x-dependency:
            type:
              required: true
              value: strict-mode
        tos_value:
          pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
          type: string
          x-dependency:
            type:
              required: true
              value: set-tos
          x-display-name: Tos Value
        track-sc0-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc0
          x-display-name: track-sc0 Key
        track-sc0-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc0
          x-display-name: track-sc0 Table
        track-sc1-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc1
          x-display-name: track-sc1 Key
        track-sc1-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc1
          x-display-name: track-sc1 Table
        track-sc2-key:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: track-sc2
          x-display-name: track-sc2 Key
        track-sc2-table:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: track-sc2
          x-display-name: track-sc2 Table
        type:
          enum:
          - allow
          - deny
          - redirect
          - add-header
          - set-header
          - del-header
          - set-log-level
          - set-var
          - set-status
          - send-spoe-group
          - replace-header
          - replace-value
          - add-acl
          - del-acl
          - capture
          - set-map
          - del-map
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt0
          - set-mark
          - set-nice
          - set-tos
          - silent-drop
          - unset-var
          - track-sc0
          - track-sc1
          - track-sc2
          - strict-mode
          - lua
          type: string
          x-nullable: false
        var_expr:
          type: string
          x-dependency:
            type:
              required: true
              value: set-var
          x-display-name: Var Expression
        var_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-var
              - unset-var
        var_scope:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value:
              - set-var
              - unset-var
      required:
      - index
      - type
      title: HTTP Response Rule
      type: object
  http_response_rules:
    title: HTTP Response Rules Array
    description: HAProxy HTTP response rules array (corresponds to http-response directives)
    type: array
    items:
      $ref: '#/definitions/http_response_rule'
  tcp_request_rule:
      additionalProperties: false
      description: HAProxy TCP Request Rule configuration (corresponds to tcp-request)
      example:
        cond: if
        cond_test: '{ src 192.168.0.0/16 }'
        index: 0
        type: connection
      properties:
        action:
          enum:
          - accept
          - capture
          - do-resolve
          - expect-netscaler-cip
          - expect-proxy
          - reject
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt0
          - send-spoe-group
          - set-dst-port
          - set-dst
          - set-priority
          - set-src
          - set-var
          - silent-drop
          - track-sc0
          - track-sc1
          - track-sc2
          - unset-var
          - use-service
          - lua
          type: string
          x-dependency:
            type:
              required: true
              value:
              - connection
              - content
              - session
          x-nullable: false
        capture_len:
          type: integer
          x-dependency:
            action:
              required: true
              value: capture
            type:
              required: true
              value:
              - connection
              - content
          x-display-name: Capture Length
        capture_sample:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            action:
              required: true
              value: capture
            type:
              required: true
              value:
              - connection
              - content
          x-display-name: Capture Sample
        cond:
          enum:
          - if
          - unless
          type: string
          x-dependency:
            type:
              value:
              - connection
              - content
              - session
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
            type:
              required: true
              value:
              - connection
              - content
              - session
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        expr:
          type: string
          x-dependency:
            action:
              required: true
              value:
              - do-resolve
              - set-var
              - set-src
              - set-priority
              - set-dst
              - set-dst-port
            type:
              value:
              - session
              - connection
              - content
          x-display-name: Standard HAProxy expression
        gpt_value:
          type: string
          x-dependency:
            action:
              required: true
              value: sc-set-gpt0
            type:
              required: true
              value:
              - connection
              - content
              - session
          x-display-name: Sticky counter value
        index:
          type: integer
          x-nullable: true
        lua_action:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            action:
              required: true
              value: lua
            type:
              value:
              - connection
              - content
          x-display-name: Lua action name
        lua_params:
          type: string
          x-dependency:
            action:
              value: lua
            type:
              value:
              - connection
              - content
          x-display-name: Lua action params
        priority_type:
          enum:
          - class
          - offset
          type: string
          x-dependency:
            action:
              required: true
              value: set-priority
            type:
              value:
              - content
        resolve_protocol:
          enum:
          - ipv4
          - ipv6
          type: string
          x-dependency:
            action:
              required: false
              value: do-resolve
            type:
              required: true
              value:
              - content
          x-display-name: Protocol
        resolve_resolvers:
          type: string
          x-dependency:
            action:
              required: true
              value: do-resolve
            type:
              required: true
              value:
              - content
          x-display-name: Resolvers
        resolve_var:
          type: string
          x-dependency:
            action:
              required: true
              value: do-resolve
            type:
              required: true
              value:
              - content
          x-display-name: Variable name
        sc_inc_id:
          type: string
          x-dependency:
            action:
              required: true
              value:
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt0
            type:
              required: true
              value:
              - connection
              - content
              - session
          x-display-name: Sticky counter ID
        service_name:
          type: string
          x-dependency:
            action:
              required: true
              value: use-service
            type:
              value: content
          x-display-name: Service name
        spoe_engine_name:
          type: string
          x-dependency:
            action:
              required: true
              value: send-spoe-group
            type:
              required: true
              value:
              - content
          x-display-name: Engine name
        spoe_group_name:
          type: string
          x-dependency:
            action:
              required: true
              value: send-spoe-group
            type:
              required: true
              value:
              - content
          x-display-name: Group name
        timeout:
          type: integer
          x-dependency:
            type:
              required: true
              value: inspect-delay
          x-nullable: true
        track_key:
          type: string
          x-dependency:
            action:
              required: true
              value:
              - track-sc0
              - track-sc1
              - track-sc2
            type:
              value:
              - session
              - connection
              - content
          x-display-name: Sample expression rule
        track_table:
          type: string
          x-dependency:
            action:
              required: false
              value:
              - track-sc0
              - track-sc1
              - track-sc2
            type:
              value:
              - session
              - connection
              - content
          x-display-name: Optional table name
        type:
          enum:
          - connection
          - content
          - inspect-delay
          - session
          type: string
          x-nullable: false
        var_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            action:
              required: true
              value:
              - set-var
              - unset-var
            type:
              value:
              - session
              - content
          x-display-name: Variable name
        var_scope:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            action:
              required: true
              value:
              - set-var
              - unset-var
            type:
              value:
              - session
              - content
          x-display-name: Variable scope
      required:
      - index
      - type
      title: TCP Request Rule
      type: object
  tcp_request_rules:
    title: TCP Request Rules Array
    description: HAProxy TCP request rules array (corresponds to tcp-request directive)
    type: array
    items:
      $ref: '#/definitions/tcp_request_rule'
  tcp_response_rule:
      additionalProperties: false
      description: HAProxy TCP Response Rule configuration (corresponds to tcp-response)
      example:
        cond: if
        cond_test: '{ src 192.168.0.0/16 }'
        index: 0
        type: content
      properties:
        action:
          enum:
          - accept
          - reject
          - lua
          type: string
          x-dependency:
            type:
              required: true
              value: content
          x-nullable: false
        cond:
          enum:
          - if
          - unless
          type: string
          x-dependency:
            type:
              value: content
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
            type:
              value: content
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        index:
          type: integer
          x-nullable: true
        lua_action:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            action:
              required: true
              value: lua
            type:
              value: content
          x-display-name: Lua action name
        lua_params:
          type: string
          x-dependency:
            action:
              value: lua
            type:
              value: content
          x-display-name: Lua action params
        timeout:
          type: integer
          x-dependency:
            type:
              required: true
              value: inspect-delay
          x-nullable: true
        type:
          enum:
          - content
          - inspect-delay
          type: string
          x-nullable: false
      required:
      - index
      - type
      title: TCP Response Rule
      type: object
  tcp_response_rules:
    title: TCP Response Rules Array
    description: HAProxy TCP response rules array (corresponds to tcp-response directive)
    type: array
    items:
      $ref: '#/definitions/tcp_response_rule'
  backend_switching_rule:
      additionalProperties: false
      description: HAProxy backend switching rule configuration (corresponds to use_backend
        directive)
      example:
        cond: if
        cond_test: '{ req_ssl_sni -i www.example.com }'
        index: 0
        name: test_backend
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        index:
          type: integer
          x-nullable: true
        name:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Backend Name
          x-dynamic-enum:
            operation: getBackends
            property: name
          x-nullable: false
      required:
      - index
      - name
      title: Backend Switching Rule
      type: object
  backend_switching_rules:
    title: Backend Switching Rules Array
    description: HAProxy backend switching rules array (corresponds to use_backend directives)
    type: array
    items:
      $ref: '#/definitions/backend_switching_rule'
  server_switching_rule:
      additionalProperties: false
      description: HAProxy server switching rule configuration (corresponds to use-server
        directive)
      example:
        cond: if
        cond_test: '{ req_ssl_sni -i www.example.com }'
        index: 0
        target_server: www
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        index:
          type: integer
          x-nullable: true
        target_server:
          pattern: ^[^\s]+$
          type: string
          x-dynamic-enum:
            operation: getServers
            property: name
          x-nullable: false
      required:
      - index
      - target_server
      title: Server Switching Rule
      type: object
  server_switching_rules:
    title: Server Switching Rules Array
    description: HAProxy backend server switching rules array (corresponds to use-server directives)
    type: array
    items:
      $ref: '#/definitions/server_switching_rule'
  filter:
      additionalProperties: false
      description: HAProxy filters
      example:
        index: 0
        trace_name: name
        trace_rnd_parsing: true
        type: trace
      properties:
        cache_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: cache
        index:
          type: integer
          x-nullable: true
        spoe_config:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: spoe
        spoe_engine:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: spoe
        trace_hexdump:
          type: boolean
          x-dependency:
            type:
              value: trace
        trace_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              value: trace
        trace_rnd_forwarding:
          type: boolean
          x-dependency:
            type:
              value: trace
          x-display-name: Trace Random Forwarding
        trace_rnd_parsing:
          type: boolean
          x-dependency:
            type:
              value: trace
          x-display-name: Trace Random Parsing
        type:
          enum:
          - trace
          - compression
          - spoe
          - cache
          type: string
          x-nullable: false
      required:
      - index
      - type
      title: Filter
      type: object
  filters:
    title: Filters Array
    description: HAProxy filters array (corresponds to filter directive)
    type: array
    items:
      $ref: '#/definitions/filter'
  stick_rule:
      additionalProperties: false
      description: Define a pattern used to create an entry in a stickiness table or matching
        condition or associate a user to a server.
      example:
        index: 0
        pattern: src
        type: match
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
          x-dynamic-enum:
            freeFormat: true
            operation: getACLs
            property: acl_name
        index:
          type: integer
          x-nullable: true
        pattern:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        table:
          pattern: ^[^\s]+$
          type: string
        type:
          enum:
          - match
          - "on"
          - store-request
          - store-response
          type: string
          x-nullable: false
      required:
      - index
      - type
      - pattern
      title: Stick Rule
      type: object
  stick_rules:
    title: Stick Rules Array
    description: HAProxy backend stick rules array (corresponds to stick store-request, stick match, stick on, stick store-response)
    type: array
    items:
      $ref: '#/definitions/stick_rule'
  log_target:
      additionalProperties: false
      description: Per-instance logging of events and traffic.
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            global:
              required: true
              value: false
            nolog:
              required: true
              value: false
        facility:
          enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - auth2
          - ftp
          - ntp
          - audit
          - alert
          - cron2
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          type: string
          x-dependency:
            global:
              required: true
              value: false
            nolog:
              required: true
              value: false
        format:
          enum:
          - rfc3164
          - rfc5424
          - short
          - raw
          type: string
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        global:
          type: boolean
        index:
          type: integer
          x-nullable: true
        length:
          type: integer
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        level:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          type: string
          x-dependency:
            global:
              value: false
            nolog:
              value: false
        minlevel:
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          type: string
          x-dependency:
            global:
              value: false
            level:
              required: false
            nolog:
              value: false
        nolog:
          type: boolean
      required:
      - index
      title: Log Target
      type: object
  log_targets:
    title: Log Target Array
    description: HAProxy log target array (corresponds to log directives)
    type: array
    items:
      $ref: '#/definitions/log_target'
  acl:
      additionalProperties: false
      description: |
        The use of Access Control Lists (ACL) provides a flexible solution to perform
        content switching and generally to take decisions based on content extracted
        from the request, the response or any environmental status.
      properties:
        acl_name:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        criterion:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        index:
          type: integer
          x-nullable: true
        value:
          type: string
          x-nullable: false
      required:
      - index
      - acl_name
      - criterion
      - value
      title: ACL Lines
      type: object
  acls:
    title: ACL Lines Array
    description: HAProxy ACL lines array (corresponds to acl directives)
    type: array
    items:
      $ref: '#/definitions/acl'
  native_stats:
      description: HAProxy stats array
      items:
        $ref: '#/definitions/native_stats_collection'
      title: Stats Array
      type: array
  native_stat:
      description: Current stats for one object.
      properties:
        backend_name:
          type: string
          x-dependency:
            type: server
        name:
          type: string
        stats:
          $ref: '#/definitions/native_stat_stats'
        type:
          enum:
          - backend
          - server
          - frontend
          type: string
      title: Stats
      type: object
  native_stat_stats:
      example:
        bin: 4326578
        bout: 889901290
        comp_byp: 0
        comp_in: 0
        comp_out: 0
        comp_rsp: 0
        conn_rate: 12
        conn_rate_max: 456
        conn_tot: 45682
        dcon: 0
        dreq: 4
        dresp: 1
        dses: 0
        ereq: 54
        hrsp_1xx: 0
        hrsp_2xx: 165
        hrsp_3xx: 12
        hrsp_4xx: 50
        hrsp_5xx: 4
        hrsp_other: 0
        iid: 0
        intercepted: 346
        mode: http
        pid: 3204
        rate: 64
        rate_lim: 20000
        rate_max: 4000
        req_rate: 49
        req_rate_max: 3965
        req_total: 1254786
        scur: 129
        slim: 2000
        smax: 2000
        status: UP
        stot: 12902
      properties:
        act:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        addr:
          type: string
          x-dependency:
            type: server
        agent_code:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        agent_desc:
          type: string
          x-dependency:
            type: server
        agent_duration:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        agent_fall:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        agent_health:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        agent_rise:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        agent_status:
          enum:
          - UNK
          - INI
          - SOCKERR
          - L40K
          - L4TOUT
          - L4CON
          - L7OK
          - L7STS
          type: string
          x-dependency:
            type: server
        algo:
          type: string
          x-dependency:
            type: backend
        bck:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        bin:
          type: integer
          x-nullable: true
        bout:
          type: integer
          x-nullable: true
        check_code:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        check_desc:
          type: string
          x-dependency:
            type: server
        check_duration:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        check_fall:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        check_health:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        check_rise:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        check_status:
          enum:
          - UNK
          - INI
          - SOCKERR
          - L40K
          - L4TOUT
          - L4CON
          - L6OK
          - L6TOUT
          - L6RSP
          - L7OK
          - L7OKC
          - L7TOUT
          - L7RSP
          - L7STS
          type: string
          x-dependency:
            type: server
        chkdown:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        chkfail:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        cli_abrt:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        comp_byp:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        comp_in:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        comp_out:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        comp_rsp:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        conn_rate:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        conn_rate_max:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        conn_tot:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        cookie:
          type: string
          x-dependency:
            type:
            - server
            - backend
        ctime:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        dcon:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        downtime:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        dreq:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        dresp:
          type: integer
          x-nullable: true
        dses:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        econ:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        ereq:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        eresp:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        hanafail:
          type: string
          x-dependency:
            type: server
        hrsp_1xx:
          type: integer
          x-nullable: true
        hrsp_2xx:
          type: integer
          x-nullable: true
        hrsp_3xx:
          type: integer
          x-nullable: true
        hrsp_4xx:
          type: integer
          x-nullable: true
        hrsp_5xx:
          type: integer
          x-nullable: true
        hrsp_other:
          type: integer
          x-nullable: true
        iid:
          type: integer
          x-nullable: true
        intercepted:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        lastchg:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        lastsess:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        lbtot:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        mode:
          enum:
          - tcp
          - http
          - health
          - unknown
          type: string
        pid:
          type: integer
          x-nullable: true
        qcur:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        qlimit:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        qmax:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        qtime:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        rate:
          type: integer
          x-nullable: true
        rate_lim:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        rate_max:
          type: integer
          x-nullable: true
        req_rate:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        req_rate_max:
          type: integer
          x-dependency:
            type: frontend
          x-nullable: true
        req_tot:
          type: integer
          x-dependency:
            type:
            - frontend
            - backend
          x-nullable: true
        rtime:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        scur:
          type: integer
          x-nullable: true
        sid:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        slim:
          type: integer
          x-nullable: true
        smax:
          type: integer
          x-nullable: true
        srv_abrt:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        status:
          enum:
          - UP
          - DOWN
          - NOLB
          - MAINT
          - no check
          type: string
        stot:
          type: integer
          x-nullable: true
        throttle:
          type: integer
          x-dependency:
            type: server
          x-nullable: true
        tracked:
          type: string
          x-dependency:
            type: server
        ttime:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        weight:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        wredis:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
        wretr:
          type: integer
          x-dependency:
            type:
            - server
            - backend
          x-nullable: true
      type: object
  native_stats_collection:
      description: Stats from one runtime API
      properties:
        error:
          type: string
        runtimeAPI:
          type: string
        stats:
          items:
            $ref: '#/definitions/native_stat'
          type: array
      title: Stats collection
      type: object
  stats_options:
      properties:
        stats_enable:
          type: boolean
          x-display-name: Stats Enable
        stats_hide_version:
          type: boolean
          x-display-name: Stats Hide Version
        stats_maxconn:
          minimum: 1
          type: integer
        stats_refresh_delay:
          type: integer
          x-nullable: true
        stats_show_desc:
          type: string
          x-nullable: true
        stats_show_legends:
          type: boolean
          x-display-name: Stats Show Legends
        stats_show_node_name:
          pattern: ^[^\s]+$
          type: string
          x-nullable: true
        stats_uri_prefix:
          pattern: ^[^\s]+$
          type: string
      type: object
  error:
      additionalProperties:
        type: string
      description: API Error
      properties:
        code:
          type: integer
          x-nullable: true
        message:
          type: string
          x-nullable: true
      required:
      - code
      - message
      title: Error
      type: object
  endpoint:
      description: Endpoint definition
      properties:
        description:
          description: Endpoint description
          type: string
        title:
          description: Endpoint title
          type: string
        url:
          description: Path to the endpoint
          type: string
      title: Endpoint
      type: object
  endpoints:
    title: Endpoints Array
    description: Collection of endpoints
    type: array
    items:
      $ref: '#/definitions/endpoint'
  process_infos:
      description: General HAProxy process information
      items:
        $ref: '#/definitions/process_info'
      title: HAProxy Information
      type: array
  process_info:
      properties:
        error:
          type: string
        info:
          $ref: '#/definitions/process_info_item'
        runtimeAPI:
          type: string
      type: object
  process_info_item:
      properties:
        active_peers:
          type: integer
          x-nullable: true
        busy_polling:
          type: integer
          x-nullable: true
        bytes_out_rate:
          type: integer
          x-nullable: true
        compress_bps_in:
          type: integer
          x-nullable: true
        compress_bps_out:
          type: integer
          x-nullable: true
        compress_bps_rate_lim:
          type: integer
          x-nullable: true
        conn_rate:
          type: integer
          x-nullable: true
        conn_rate_limit:
          type: integer
          x-nullable: true
        connected_peers:
          type: integer
          x-nullable: true
        cum_conns:
          type: integer
          x-nullable: true
        cum_req:
          type: integer
          x-nullable: true
        cum_ssl_conns:
          type: integer
          x-nullable: true
        curr_conns:
          type: integer
          x-nullable: true
        curr_ssl_conns:
          type: integer
          x-nullable: true
        dropped_logs:
          type: integer
          x-nullable: true
        failed_resolutions:
          type: integer
          x-nullable: true
        hard_max_conn:
          type: integer
          x-nullable: true
        idle_pct:
          type: integer
          x-nullable: true
        jobs:
          type: integer
          x-nullable: true
        listeners:
          type: integer
          x-nullable: true
        max_conn:
          type: integer
          x-nullable: true
        max_conn_rate:
          type: integer
          x-nullable: true
        max_pipes:
          type: integer
          x-nullable: true
        max_sess_rate:
          type: integer
          x-nullable: true
        max_sock:
          type: integer
          x-nullable: true
        max_ssl_conns:
          type: integer
          x-nullable: true
        max_ssl_rate:
          type: integer
          x-nullable: true
        max_zlib_mem_usage:
          type: integer
          x-nullable: true
        mem_max_mb:
          type: integer
          x-nullable: true
        nbthread:
          description: Number of threads
          type: integer
          x-display-name: Number of Threads
          x-nullable: true
        node:
          type: string
        pid:
          description: Process id of the replying worker process
          type: integer
          x-display-name: PID
          x-nullable: true
        pipes_free:
          type: integer
          x-nullable: true
        pipes_used:
          type: integer
          x-nullable: true
        pool_alloc_mb:
          type: integer
          x-nullable: true
        pool_failed:
          type: integer
          x-nullable: true
        pool_used_mb:
          type: integer
          x-nullable: true
        process_num:
          description: Process number
          type: integer
          x-display-name: Process Number
          x-nullable: true
        processes:
          description: Number of spawned processes
          type: integer
          x-display-name: Number of processes
          x-nullable: true
        release_date:
          description: HAProxy version release date
          format: date
          type: string
        run_queue:
          type: integer
          x-nullable: true
        sess_rate:
          type: integer
          x-nullable: true
        sess_rate_limit:
          type: integer
          x-nullable: true
        ssl_backend_key_rate:
          type: integer
          x-nullable: true
        ssl_backend_max_key_rate:
          type: integer
          x-nullable: true
        ssl_cache_lookups:
          type: integer
          x-nullable: true
        ssl_cache_misses:
          type: integer
          x-nullable: true
        ssl_frontend_key_rate:
          type: integer
          x-nullable: true
        ssl_frontend_max_key_rate:
          type: integer
          x-nullable: true
        ssl_frontend_session_reuse:
          type: integer
          x-nullable: true
        ssl_rate:
          type: integer
          x-nullable: true
        ssl_rate_limit:
          type: integer
          x-nullable: true
        stopping:
          type: integer
          x-nullable: true
        tasks:
          type: integer
          x-nullable: true
        total_bytes_out:
          type: integer
          x-nullable: true
        ulimit_n:
          type: integer
          x-nullable: true
        unstoppable:
          type: integer
          x-nullable: true
        uptime:
          description: HAProxy uptime in s
          type: integer
          x-nullable: true
        version:
          description: HAProxy version string
          type: string
        zlib_mem_usage:
          type: integer
          x-nullable: true
      type: object
  transaction:
      description: HAProxy configuration transaction
      example:
        _version: 2
        id: 273e3385-2d0c-4fb1-aa27-93cbb31ff203
        status: in_progress
      properties:
        _version:
          type: integer
        id:
          pattern: ^[^\s]+$
          type: string
        status:
          enum:
          - failed
          - in_progress
          - success
          type: string
      title: Configuration transaction
      type: object
  transactions:
    title: Transactions array
    description: Configuration transactions array
    type: array
    items:
      $ref: "#/definitions/transaction"
  info:
      description: General API, OS and hardware information
      example:
        api:
          build_date: "2019-08-21T17:31:56.000Z"
          version: v1.2.1 45a3288.dev
        system:
          cpu_info:
            model: Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz
            num_cpus: 4
          hostname: test
          mem_info:
            dataplaneapi_memory: 44755536
            free_memory: 5790642176
            total_memory: 16681517056
          os_string: 'Linux 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019'
          time: 1566401525
          uptime: 87340
      properties:
        api:
          properties:
            build_date:
              description: HAProxy Dataplane API build date
              format: date-time
              type: string
            version:
              description: HAProxy Dataplane API version string
              type: string
          type: object
        system:
          properties:
            cpu_info:
              properties:
                model:
                  type: string
                num_cpus:
                  description: Number of logical CPUs
                  type: integer
              type: object
            hostname:
              description: Hostname where the HAProxy is running
              type: string
            mem_info:
              properties:
                dataplaneapi_memory:
                  type: integer
                free_memory:
                  type: integer
                total_memory:
                  type: integer
              type: object
            os_string:
              description: OS string
              type: string
            time:
              description: Current time in milliseconds since Epoch.
              type: integer
            uptime:
              description: System uptime
              type: integer
              x-nullable: true
          type: object
      title: Information
      type: object
  reload:
      description: HAProxy reload
      example:
        id: 2019-01-03-44
        status: in_progress
      properties:
        id:
          pattern: ^\d{4}-\d{2}-\d{2}-\d+$
          type: string
        reload_timestamp:
          type: integer
        response:
          type: string
        status:
          enum:
          - failed
          - in_progress
          - succeeded
          type: string
      title: HAProxy reload
      type: object
  reloads:
    title: HAProxy Reloads Array
    description: HAProxy reloads array
    type: array
    items:
      $ref: "#/definitions/reload"
  runtime_server:
      description: Runtime transient server properties
      example:
        address: 127.0.0.5
        admin_state: ready
        operational_state: up
        port: 80
        server_id: 1
        server_name: web_server
      properties:
        address:
          pattern: ^[^\s]+$
          readOnly: true
          type: string
          x-nullable: false
        admin_state:
          enum:
          - ready
          - maint
          - drain
          type: string
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        operational_state:
          enum:
          - up
          - down
          - stopping
          type: string
        port:
          maximum: 65535
          minimum: 1
          readOnly: true
          type: integer
          x-nullable: true
      title: Runtime Server
      type: object
  runtime_servers:
    title: HAProxy Runtime Servers Array
    description: HAProxy runtime servers array
    type: array
    items:
      $ref: "#/definitions/runtime_server"
  stick_table:
      description: Stick Table Information
      properties:
        fields:
          items:
            properties:
              field:
                enum:
                - server_id
                - gpc0
                - gpc0_rate
                - gpc1
                - gpc1_rate
                - conn_cnt
                - conn_cur
                - conn_rate
                - sess_cnt
                - sess_rate
                - http_req_cnt
                - http_req_rate
                - http_err_cnt
                - http_err_rate
                - bytes_in_cnt
                - bytes_in_rate
                - bytes_out_cnt
                - bytes_out_rate
                type: string
              period:
                type: integer
                x-dependency:
                  type:
                    value: rate
              type:
                enum:
                - rate
                - counter
                type: string
            type: object
            x-go-name: StickTableField
          type: array
        name:
          type: string
        process:
          description: Process number if master-worker mode
          type: integer
          x-nullable: true
        size:
          type: integer
          x-nullable: true
        type:
          enum:
          - ip
          - ipv6
          - integer
          - string
          - binary
          type: string
        used:
          type: integer
          x-nullable: true
      title: Stick Table
      type: object
  stick_tables:
    title: Stick Tables Array
    description: Array of runtime stick tables
    type: array
    items:
      $ref: "#/definitions/stick_table"
  stick_table_entry:
      description: One entry in stick table
      properties:
        bytes_in_cnt:
          type: integer
          x-nullable: true
        bytes_in_rate:
          type: integer
          x-nullable: true
        bytes_out_cnt:
          type: integer
          x-nullable: true
        bytes_out_rate:
          type: integer
          x-nullable: true
        conn_cnt:
          type: integer
          x-nullable: true
        conn_cur:
          type: integer
          x-nullable: true
        conn_rate:
          type: integer
          x-nullable: true
        exp:
          type: integer
          x-nullable: true
        gpc0:
          type: integer
          x-nullable: true
        gpc0_rate:
          type: integer
          x-nullable: true
        gpc1:
          type: integer
          x-nullable: true
        gpc1_rate:
          type: integer
          x-nullable: true
        http_err_cnt:
          type: integer
          x-nullable: true
        http_err_rate:
          type: integer
          x-nullable: true
        http_req_cnt:
          type: integer
          x-nullable: true
        http_req_rate:
          type: integer
          x-nullable: true
        id:
          type: string
        key:
          type: string
        server_id:
          type: integer
          x-nullable: true
        sess_cnt:
          type: integer
          x-nullable: true
        sess_rate:
          type: integer
          x-nullable: true
        use:
          type: boolean
      title: Stick Table Entry
      type: object
  stick_table_entries:
    title: Stick Tables Entries
    description: Entries of one runtime stick table
    type: array
    items:
      $ref: "#/definitions/stick_table_entry"
  cluster_settings:
      description: Settings related to a cluster.
      properties:
        bootstrap_key:
          type: string
        cluster:
          properties:
            address:
              pattern: ^[^\s]+$
              readOnly: true
              type: string
            api_base_path:
              readOnly: true
              type: string
            description:
              readOnly: true
              type: string
            name:
              readOnly: true
              type: string
            port:
              maximum: 65535
              minimum: 1
              readOnly: true
              type: integer
              x-nullable: true
          title: Cluster controller information
          type: object
        mode:
          enum:
          - single
          - cluster
          type: string
        status:
          enum:
          - active
          - unreachable
          - waiting_approval
          readOnly: true
          type: string
      title: Cluster Settings
      type: object
  map:
      description: Map File
      properties:
        description:
          type: string
        file:
          type: string
        id:
          type: string
      title: Map File
      type: object
  maps:
    title: Map Files Array
    description: Array of runtime map files
    type: array
    items:
      $ref: "#/definitions/map"
  map_entry:
      description: One Map Entry
      properties:
        id:
          readOnly: true
          type: string
        key:
          type: string
        value:
          type: string
      title: One Map Entry
      type: object
  map_entries:
    title: Maps Entries
    description: Entries of one runtime map
    type: array
    items:
      $ref: "#/definitions/map_entry"
  balance:
      properties:
        algorithm:
          enum:
          - roundrobin
          - static-rr
          - leastconn
          - first
          - source
          - uri
          - url_param
          - hdr
          - random
          - rdp-cookie
          type: string
        hdr_name:
          type: string
          x-dependency:
            algorithm:
              required: true
              value: hdr
          x-display-name: Header Name
        hdr_use_domain_only:
          type: boolean
          x-dependency:
            algorithm:
              value: hdr
          x-display-name: Header Use Domain Only
        random_draws:
          type: integer
          x-dependency:
            algorithm:
              value: random
          x-display-name: Random Draws
          x-nullable: false
        rdp_cookie_name:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            algorithm:
              value: rdp-cookie
          x-display-name: Rdp Cookie Name
        uri_depth:
          pattern: ^[^\d+$]
          type: integer
          x-dependency:
            algorithm:
              value: uri
          x-display-name: Uri Depth
        uri_len:
          pattern: ^[^\d+$]
          type: integer
          x-dependency:
            algorithm:
              value: uri
          x-display-name: Uri Len
        uri_whole:
          type: boolean
          x-dependency:
            algorithm:
              value: uri
          x-display-name: Uri Whole
        url_param:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            algorithm:
              required: true
              value: url_param
          x-display-name: Url Param
        url_param_check_post:
          type: integer
          x-dependency:
            algorithm:
              value: url_param
          x-display-name: Url Param Check Post
        url_param_max_wait:
          pattern: ^[^\d+$]
          type: integer
          x-dependency:
            algorithm:
              value: url_param
          x-display-name: Url Param Max Weight
      required:
      - algorithm
      type: object
  forwardfor:
      properties:
        enabled:
          enum:
          - enabled
          type: string
        except:
          pattern: ^[^\s]+$
          type: string
        header:
          pattern: ^[^\s]+$
          type: string
        ifnone:
          type: boolean
      required:
      - enabled
      type: object
      x-display-name: ForwardFor
  default_server:
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        agent-addr:
          pattern: ^[^\s]+$
          type: string
        agent-check:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            agent-port:
              required: true
        agent-inter:
          type: integer
          x-nullable: true
        agent-port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        agent-send:
          type: string
        allow_0rtt:
          type: boolean
        alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: ALPN Protocols
        backup:
          enum:
          - enabled
          - disabled
          type: string
        check:
          enum:
          - enabled
          - disabled
          type: string
        check-sni:
          pattern: ^[^\s]+$
          type: string
        check-ssl:
          enum:
          - enabled
          - disabled
          type: string
        check_alpn:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Protocols
        check_proto:
          pattern: ^[^\s]+$
          type: string
          x-display-name: Name
        check_via_socks4:
          enum:
          - enabled
          - disabled
          type: string
        ciphers:
          type: string
          x-dependency:
            ssl:
              value: enabled
        ciphersuites:
          type: string
          x-dependency:
            ssl:
              value: enabled
        cookie:
          pattern: ^[^\s]+$
          type: string
        crl_file:
          type: string
          x-dependency:
            ssl:
              value: enabled
        downinter:
          type: integer
          x-nullable: true
        error_limit:
          type: integer
          x-display-name: Error count
        fall:
          type: integer
          x-display-name: Nr. of consecutive failed checks
          x-nullable: true
        fastinter:
          type: integer
          x-nullable: true
        force_sslv3:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv10:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv11:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv12:
          enum:
          - enabled
          - disabled
          type: string
        force_tlsv13:
          enum:
          - enabled
          - disabled
          type: string
        health_check_port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        init-addr:
          pattern: ^[^\s]+$
          type: string
        inter:
          type: integer
          x-nullable: true
        log_proto:
          enum:
          - legacy
          - octet-count
          type: string
        max_reuse:
          type: integer
          x-nullable: true
        maxconn:
          type: integer
          x-display-name: Max Concurrent Connections
          x-nullable: true
        maxqueue:
          type: integer
          x-display-name: Max Number of Connections
          x-nullable: true
        minconn:
          type: integer
          x-nullable: true
        name:
          pattern: ^[^\s]+$
          type: string
          x-nullable: false
        namespace:
          type: string
        no_sslv3:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv10:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv11:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv12:
          enum:
          - enabled
          - disabled
          type: string
        no_tlsv13:
          enum:
          - enabled
          - disabled
          type: string
        no_verifyhost:
          enum:
          - enabled
          - disabled
          type: string
        npn:
          type: string
          x-dependency:
            ssl:
              value: enabled
        observe:
          enum:
          - layer4
          - layer7
          type: string
          x-dependency:
            ssl:
              value: enabled
        on-error:
          enum:
          - fastinter
          - fail-check
          - sudden-death
          - mark-down
          type: string
        on-marked-down:
          enum:
          - shutdown-sessions
          type: string
        on-marked-up:
          enum:
          - shutdown-backup-sessions
          type: string
        pool_low_conn:
          type: integer
          x-nullable: true
        pool_max_conn:
          type: integer
          x-nullable: true
        pool_purge_delay:
          type: integer
          x-nullable: true
        port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
        proto:
          pattern: ^[^\s]+$
          type: string
        proxy-v2-options:
          items:
            enum:
            - ssl
            - cert-cn
            - ssl-cipher
            - cert-sig
            - cert-key
            - authority
            - crc32c
            - unique-id
            type: string
          type: array
        redir:
          type: string
          x-display-name: Prefix
        resolve-net:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            resolvers:
              required: true
        resolve-prefer:
          enum:
          - ipv4
          - ipv6
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            resolvers:
              required: true
        resolve_opts:
          pattern: ^[^,\s][^\,]*[^,\s]*$
          type: string
        resolvers:
          pattern: ^[^\s]+$
          type: string
          x-dynamic-enum:
            operation: getResolvers
            property: name
        rise:
          type: integer
          x-nullable: true
        send-proxy:
          enum:
          - enabled
          - disabled
          type: string
        send-proxy-v2:
          enum:
          - enabled
          - disabled
          type: string
        send_proxy_v2_ssl:
          enum:
          - enabled
          - disabled
          type: string
        send_proxy_v2_ssl_cn:
          enum:
          - enabled
          - disabled
          type: string
        slowstart:
          type: integer
          x-nullable: true
        sni:
          pattern: ^[^\s]+$
          type: string
        socks4:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            check-via-socks4:
              required: true
        source:
          type: string
        ssl:
          enum:
          - enabled
          - disabled
          type: string
        ssl_certificate:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            ssl:
              value: enabled
        ssl_max_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        ssl_min_ver:
          enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        ssl_reuse:
          enum:
          - enabled
          - disabled
          type: string
        stick:
          enum:
          - enabled
          - disabled
          type: string
        tcp_ut:
          type: integer
        tfo:
          enum:
          - enabled
          - disabled
          type: string
        tls_tickets:
          enum:
          - enabled
          - disabled
          type: string
          x-dependency:
            ssl:
              value: enabled
        track:
          type: string
        verify:
          enum:
          - none
          - required
          type: string
          x-dependency:
            ssl:
              value: enabled
        verifyhost:
          type: string
          x-dependency:
            ssl:
              value: enabled
            verify:
              value: required
        weight:
          type: integer
          x-nullable: true
      title: Default Server
      type: object
  httpchk_params:
      properties:
        method:
          enum:
          - HEAD
          - PUT
          - POST
          - GET
          - TRACE
          - PATCH
          type: string
        uri:
          pattern: ^[^\s]+$
          type: string
        version:
          pattern: ^[^\s]+$
          type: string
      type: object
      x-display-name: HTTP Check
  http-check:
      properties:
        exclamation_mark:
          type: boolean
          x-dependency:
            type:
              value: expect
          x-display-name: Expect Exclamation Mark
        match:
          enum:
          - status
          - rstatus
          - string
          - rstring
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: expect
          x-display-name: Expect Match
        pattern:
          pattern: ^[^\s]+$
          type: string
          x-dependency:
            type:
              required: true
              value: expect
          x-display-name: Expect Pattern
        type:
          enum:
          - disable-on-404
          - expect
          - send-state
          type: string
      required:
      - type
      type: object
  redispatch:
      properties:
        enabled:
          enum:
          - enabled
          - disabled
          type: string
        interval:
          type: integer
          x-nullable: false
      required:
      - enabled
      type: object
  errorfile:
      properties:
        code:
          enum:
          - 200
          - 400
          - 403
          - 405
          - 408
          - 425
          - 429
          - 500
          - 502
          - 503
          - 504
          type: integer
        file:
          type: string
      type: object
      x-display-name: Error File
  cookie:
      properties:
        domain:
          items:
            properties:
              value:
                pattern: ^[^\s]+$
                type: string
            type: object
            x-go-name: Domain
          type: array
          x-go-name: Domains
        dynamic:
          type: boolean
        httponly:
          type: boolean
        indirect:
          type: boolean
        maxidle:
          pattern: ^[^\d+$]
          type: integer
        maxlife:
          pattern: ^[^\d+$]
          type: integer
        name:
          pattern: ^[^\s]+$
          type: string
        nocache:
          type: boolean
        postonly:
          type: boolean
        preserve:
          type: boolean
        secure:
          type: boolean
        type:
          enum:
          - rewrite
          - insert
          - prefix
          type: string
      required:
      - name
      type: object
  resolver:
      description: Runtime DNS configuration
      properties:
        accepted_payload_size:
          maximum: 8192
          minimum: 512
          type: integer
        hold_nx:
          type: integer
          x-nullable: true
        hold_obsolete:
          type: integer
          x-nullable: true
        hold_other:
          type: integer
          x-nullable: true
        hold_refused:
          type: integer
          x-nullable: true
        hold_timeout:
          type: integer
          x-nullable: true
        hold_valid:
          type: integer
          x-nullable: true
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        parse-resolv-conf:
          type: boolean
        resolve_retries:
          minimum: 1
          type: integer
        timeout_resolve:
          type: integer
          x-nullable: false
        timeout_retry:
          type: integer
          x-nullable: false
      required:
      - name
      title: Resolver
      type: object
  resolvers:
    title: Resolvers
    description: HAProxy resolvers array
    type: array
    items:
      $ref: '#/definitions/resolver'
  nameserver:
      description: Nameserver used in Runtime DNS configuration
      example:
        address: 10.0.0.1
        name: ns1
        port: 53
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
        name:
          pattern: ^[A-Za-z0-9-_.:]+$
          type: string
          x-nullable: false
        port:
          maximum: 65535
          minimum: 1
          type: integer
          x-nullable: true
      required:
      - name
      - address
      title: Nameserver
      type: object
  nameservers:
    title: Nameservers
    description: Nameservers array
    type: array
    items:
      $ref: '#/definitions/nameserver'
  consul:
      additionalProperties: false
      description: Consul server configuration
      example:
        address: 127.0.0.1
        enabled: true
        id: "0"
        port: 90
        retry_timeout: 10
      properties:
        address:
          pattern: ^[^\s]+$
          type: string
        description:
          type: string
        enabled:
          type: boolean
        id:
          description: Auto generated ID.
          pattern: ^[^\s]+$
          type: string
          x-nullable: true
        name:
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        retry_timeout:
          description: Duration in seconds in-between data pulling requests to the consul
            server
          minimum: 1
          type: integer
        server_slots_base:
          default: 10
          type: integer
        server_slots_growth_increment:
          type: integer
        server_slots_growth_type:
          default: exponential
          enum:
          - linear
          - exponential
          type: string
        service-blacklist:
          items:
            pattern: ^[^\s]+$
            type: string
          type: array
        service-whitelist:
          items:
            pattern: ^[^\s]+$
            type: string
          type: array
        token:
          pattern: ^[^\s]+$
          type: string
      required:
      - address
      - port
      - enabled
      - retry_timeout
      title: Consul server
      type: object
  consuls:
    title: Consuls
    description: Consuls array
    type: array
    items:
      $ref: '#/definitions/consul'
  monitor_uri:
      type: string
  monitor_fail:
      properties:
        cond:
          enum:
          - if
          - unless
          type: string
          x-display-name: Condition
        cond_test:
          type: string
          x-dependency:
            cond:
              required: true
          x-display-name: Condition Test
      required:
      - cond
      - cond_test
      type: object
  smtpchk_params:
      properties:
        domain:
          type: string
        hello:
          type: string
      type: object
  mysql_check_params:
      properties:
        client_version:
          enum:
          - pre-41
          - post-41
          type: string
        username:
          type: string
      type: object
  pgsql_check_params:
      properties:
        username:
          type: string
      type: object
responses:
  BadRequest:
    description: Bad request
    headers:
      Configuration-Version:
        description: Configuration file version
        type: integer
        x-nullable: true
        default: 0
    schema:
      $ref: '#/definitions/error'
  NotFound:
    description: The specified resource was not found
    headers:
      Configuration-Version:
        description: Configuration file version
        type: integer
        x-nullable: true
        default: 0
    schema:
      $ref: '#/definitions/error'
  AlreadyExists:
    description: The specified resource already exists
    headers:
      Configuration-Version:
        description: Configuration file version
        type: integer
        x-nullable: true
        default: 0
    schema:
      $ref: '#/definitions/error'
  DefaultError:
    description: General Error
    headers:
      Configuration-Version:
        description: Configuration file version
        type: integer
        x-nullable: true
        default: 0
    schema:
      $ref: '#/definitions/error'
parameters:
  transaction_id:
    name: transaction_id
    in: query
    description: ID of the transaction where we want to add the operation. Cannot be used when version is specified.
    type: string
    required: false
    x-nullable: false
  version:
    name: version
    in: query
    description: Version used for checking configuration version. Cannot be used when transaction is specified, transaction has it's own version.
    type: integer
    required: false
    x-nullable: false
  force_reload:
    name: force_reload
    in: query
    description: If set, do a force reload, do not wait for the configured reload-delay. Cannot be used when transaction is specified, as changes in transaction are not applied directly to configuration.
    type: boolean
    required: false
    default: false
securityDefinitions:
  basic_auth:
    type: basic
basePath: /v2
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Discovery
    description: API autodiscover endpoints
  - name: Information
  - name: Specification
  - name: Transactions
    description: |
      Managing transactions. Configuration changes can be grouped in the transaction. You start the
      transaction with trasactions POST, and call the configuration changes you need with parameter
      transaction_id. When you want to commit the transaction, you call the transactions PUT and all changes
      in that transaction is commited. If you call a configuration change without the transaction_id,
      transaction mechanism is implicitly called with one operation in transaction.
  - name: Reloads
    description: |
      Checking reload success. To avoid constant reloading we reload in intervals that are configurable when
      with reload-delay option. When a change to configuration is made and force_reload url query string
      parameter is false we issue a request for reload, and return the reload ID in response header. You can
      then use reloads endpoints to check the status of that reload ID. If force_reload is true, we override all
      of this and reload immediately.
  - name: Sites
    description: |
      Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends
      connected to it via default_backend or use-backend directives.
  - name: Stats
    description: Stats container
  - name: Global
    description: Managing global configuration (advanced mode)
  - name: Defaults
    description: Managing defaults configuration (advanced mode)
  - name: Frontend
    description: Managing frontend configuration (advanced mode)
  - name: Backend
    description: Managing backend configurations (advanced mode)
  - name: Bind
    description: Managing frontend bind configurations (advanced mode)
  - name: Server
    description: Managing backend server configurations (advanced mode)
  - name: Configuration
    description: Raw HAProxy configuration management (advanced mode)
  - name: TCPRequestRule
  - name: HTTPRequestRule
  - name: HTTPResponseRule
  - name: BackendSwitchingRule
  - name: ServerSwitchingRule
  - name: TCPResponseRule
  - name: Filter
  - name: StickRule
  - name: StickTable
  - name: LogTarget
  - name: ACL
  - name: Resolver
  - name: Nameserver
  - name: Peer
  - name: PeerEntry
  - name: Cluster
  - name: Maps
  - name: SpecificationOpenapiv3
  - name: ServiceDiscovery
security:
  - basic_auth: []
paths:
  /:
      get:
        description: Returns a list of root endpoints.
        operationId: getAPIEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of root endpoints
        tags:
        - Discovery
  /specification:
      get:
        description: Return Data Plane API OpenAPI specification
        operationId: getSpecification
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Data Plane API Specification
        tags:
        - Specification
  /specification_openapiv3:
      get:
        description: Return Data Plane API OpenAPI v3 specification
        operationId: getOpenapiv3Specification
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Data Plane API v3 Specification
        tags:
        - SpecificationOpenapiv3
  /info:
      get:
        description: Return API, hardware and OS information
        operationId: getInfo
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/info'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return API, hardware and OS information
        tags:
        - Information
  /cluster:
      get:
        description: Returns cluster data
        operationId: getCluster
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/cluster_settings'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return cluster data
        tags:
        - Discovery
      post:
        description: Post cluster settings
        operationId: postCluster
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/cluster_settings'
        - description: In case of moving to single mode do we keep or clean configuration
          enum:
          - keep
          in: query
          name: configuration
          required: false
          type: string
        - $ref: '#/parameters/version'
        responses:
          "200":
            description: Cluster settings changed
            schema:
              $ref: '#/definitions/cluster_settings'
          "400":
            $ref: '#/responses/BadRequest'
          default:
            $ref: '#/responses/DefaultError'
        summary: Post cluster settings
        tags:
        - Cluster
  /cluster/certificate:
      post:
        description: Initiates a certificate refresh
        operationId: initiateCertificateRefresh
        responses:
          "200":
            description: refresh activated
          "403":
            description: refresh not possible
          default:
            $ref: '#/responses/DefaultError'
        summary: Initiates a certificate refresh
        tags:
        - Cluster
  /service_discovery/consul:
      get:
        description: Returns all configured Consul servers.
        operationId: getConsuls
        responses:
          "200":
            description: Successful operation
            schema:
              properties:
                data:
                  $ref: '#/definitions/consuls'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all configured Consul servers
        tags:
        - ServiceDiscovery
      post:
        description: Adds a new Consul server.
        operationId: createConsul
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/consul'
        responses:
          "201":
            description: Consul created
            schema:
              $ref: '#/definitions/consul'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Consul server
        tags:
        - ServiceDiscovery
  /service_discovery/consul/{id}:
      delete:
        description: Deletes a Consul server configuration by it's id.
        operationId: deleteConsul
        parameters:
        - description: Consul server Index
          in: path
          name: id
          required: true
          type: string
        responses:
          "204":
            description: Consul server deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Consul server
        tags:
        - ServiceDiscovery
      get:
        description: Returns one Consul server configuration by it's id.
        operationId: getConsul
        parameters:
        - description: Consul server id
          in: path
          name: id
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              properties:
                data:
                  $ref: '#/definitions/consul'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Consul server
        tags:
        - ServiceDiscovery
      put:
        description: Replaces a Consul server configuration by it's id.
        operationId: replaceConsul
        parameters:
        - description: Consul Index
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/consul'
        responses:
          "200":
            description: Consul server replaced
            schema:
              $ref: '#/definitions/consul'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Consul server
        tags:
        - ServiceDiscovery
  /services:
      get:
        description: Returns a list of API managed services endpoints.
        operationId: getServicesEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of service endpoints
        tags:
        - Discovery
  /services/haproxy:
      get:
        description: Returns a list of HAProxy related endpoints.
        operationId: getHaproxyEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy related endpoints
        tags:
        - Discovery
  /services/haproxy/sites:
      get:
        description: Returns an array of all configured sites.
        operationId: getSites
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/sites'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of sites
        tags:
        - Sites
      post:
        description: Adds a new site to the configuration file.
        operationId: createSite
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/site'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Site created
            schema:
              $ref: '#/definitions/site'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/site'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a site
        tags:
        - Sites
  /services/haproxy/sites/{name}:
      delete:
        description: Deletes a site from the configuration by it's name.
        operationId: deleteSite
        parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Site deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a site
        tags:
        - Sites
      get:
        description: Returns one site configuration by it's name.
        operationId: getSite
        parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/site'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a site
        tags:
        - Sites
      put:
        description: Replaces a site configuration by it's name.
        operationId: replaceSite
        parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/site'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Site replaced
            schema:
              $ref: '#/definitions/site'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/site'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a site
        tags:
        - Sites
  /services/haproxy/stats:
      get:
        description: Returns a list of HAProxy stats endpoints.
        operationId: getStatsEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy stats endpoints
        tags:
        - Discovery
  /services/haproxy/stats/native:
      get:
        description: Getting stats from the HAProxy.
        operationId: getStats
        parameters:
        - description: Object type to get stats for (one of frontend, backend, server)
          enum:
          - frontend
          - backend
          - server
          in: query
          name: type
          required: false
          type: string
        - description: Object name to get stats for
          in: query
          name: name
          required: false
          type: string
        - description: Object parent name to get stats for, in case the object is a server
          in: query
          name: parent
          required: false
          type: string
          x-dependency:
            query.type: server
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/native_stats'
          "500":
            description: Internal Server Error
            schema:
              $ref: '#/definitions/native_stats'
          default:
            $ref: '#/responses/DefaultError'
        summary: Gets stats
        tags:
        - Stats
  /services/haproxy/transactions:
      get:
        description: Returns a list of HAProxy configuration transactions. Transactions
          can be filtered by their status.
        operationId: getTransactions
        parameters:
        - description: Filter by transaction status
          enum:
          - failed
          - in_progress
          in: query
          name: status
          required: false
          type: string
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/transactions'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy configuration transactions.
        tags:
        - Transactions
      post:
        description: Starts a new transaction and returns it's id
        operationId: startTransaction
        parameters:
        - description: Configuration version on which to work on
          in: query
          name: version
          required: true
          type: integer
        produces:
        - application/json
        responses:
          "201":
            description: Transaction started
            schema:
              $ref: '#/definitions/transaction'
          "429":
            description: Too many open transactions
            schema:
              example:
                code: 429
                message: cannot start a new transaction, reached the maximum amount of 20
                  active transactions available
              properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Start a new transaction
        tags:
        - Transactions
  /services/haproxy/transactions/{id}:
      delete:
        description: Deletes a transaction.
        operationId: deleteTransaction
        parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
        responses:
          "204":
            description: Transaction deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a transaction
        tags:
        - Transactions
      get:
        description: Returns one HAProxy configuration transactions.
        operationId: getTransaction
        parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/transaction'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one HAProxy configuration transactions
        tags:
        - Transactions
      put:
        description: Commit transaction, execute all operations in transaction and return
          msg
        operationId: commitTransaction
        parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Transaction succesfully commited
            schema:
              $ref: '#/definitions/transaction'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/transaction'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Commit transaction
        tags:
        - Transactions
  /services/haproxy/reloads:
      get:
        description: Returns a list of HAProxy reloads.
        operationId: getReloads
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/reloads'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy Reloads.
        tags:
        - Reloads
  /services/haproxy/reloads/{id}:
      get:
        description: Returns one HAProxy reload status.
        operationId: getReload
        parameters:
        - description: Reload id
          in: path
          name: id
          pattern: ^\d{4}-\d{2}-\d{2}-\d+$
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/reload'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one HAProxy reload status
        tags:
        - Reloads
  /services/haproxy/configuration:
      get:
        description: Returns a list of endpoints to be used for advanced configuration of
          HAProxy objects.
        operationId: getConfigurationEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy advanced configuration endpoints
        tags:
        - Discovery
  /services/haproxy/configuration/global:
      get:
        description: Returns global part of configuration.
        operationId: getGlobal
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/global'
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a global part of configuration
        tags:
        - Global
      put:
        description: Replace global part of config
        operationId: replaceGlobal
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/global'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Global replaced
            schema:
              $ref: '#/definitions/global'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/global'
          "400":
            $ref: '#/responses/BadRequest'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace global
        tags:
        - Global
  /services/haproxy/configuration/defaults:
      get:
        description: Returns defaults part of configuration.
        operationId: getDefaults
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/defaults'
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return defaults part of configuration
        tags:
        - Defaults
      put:
        description: Replace defaults part of config
        operationId: replaceDefaults
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/defaults'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Defaults replaced
            schema:
              $ref: '#/definitions/defaults'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/defaults'
          "400":
            $ref: '#/responses/BadRequest'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace defaults
        tags:
        - Defaults
  /services/haproxy/configuration/frontends:
      get:
        description: Returns an array of all configured frontends.
        operationId: getFrontends
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/frontends'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of frontends
        tags:
        - Frontend
      post:
        description: Adds a new frontend to the configuration file.
        operationId: createFrontend
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/frontend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Frontend created
            schema:
              $ref: '#/definitions/frontend'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/frontend'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a frontend
        tags:
        - Frontend
  /services/haproxy/configuration/frontends/{name}:
      delete:
        description: Deletes a frontend from the configuration by it's name.
        operationId: deleteFrontend
        parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Frontend deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a frontend
        tags:
        - Frontend
      get:
        description: Returns one frontend configuration by it's name.
        operationId: getFrontend
        parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/frontend'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a frontend
        tags:
        - Frontend
      put:
        description: Replaces a frontend configuration by it's name.
        operationId: replaceFrontend
        parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/frontend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Frontend replaced
            schema:
              $ref: '#/definitions/frontend'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/frontend'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a frontend
        tags:
        - Frontend
  /services/haproxy/configuration/peer_section:
      get:
        description: Returns an array of all configured peer_section.
        operationId: getPeerSections
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/peer_sections'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of peer_section
        tags:
        - Peer
      post:
        description: Adds a new peer to the configuration file.
        operationId: createPeer
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Peer created
            schema:
              $ref: '#/definitions/peer_section'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/peer_section'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a peer
        tags:
        - Peer
  /services/haproxy/configuration/peer_section/{name}:
      delete:
        description: Deletes a peer from the configuration by it's name.
        operationId: deletePeer
        parameters:
        - description: Peer name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Peer deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a peer
        tags:
        - Peer
      get:
        description: Returns one peer configuration by it's name.
        operationId: getPeerSection
        parameters:
        - description: Peer name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/peer_section'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a peer
        tags:
        - Peer
  /services/haproxy/configuration/peer_entries:
      get:
        description: Returns an array of all peer_entries that are configured in specified
          peer section.
        operationId: getPeerEntries
        parameters:
        - description: Parent peer section name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/peer_entries'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of peer_entries
        tags:
        - PeerEntry
      post:
        description: Adds a new peer entry in the specified peer section in the configuration
          file.
        operationId: createPeerEntry
        parameters:
        - description: Parent peer section name
          in: query
          name: peer_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: PeerEntry created
            schema:
              $ref: '#/definitions/peer_entry'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/peer_entry'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new peer_entry
        tags:
        - PeerEntry
  /services/haproxy/configuration/peer_entries/{name}:
      delete:
        description: Deletes a peer entry configuration by it's name in the specified peer
          section.
        operationId: deletePeerEntry
        parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: PeerEntry deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a peer_entry
        tags:
        - PeerEntry
      get:
        description: Returns one peer_entry configuration by it's name in the specified
          peer section.
        operationId: getPeerEntry
        parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/peer_entry'
              type: object
          "404":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one peer_entry
        tags:
        - PeerEntry
      put:
        description: Replaces a peer entry configuration by it's name in the specified peer
          section.
        operationId: replacePeerEntry
        parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: PeerEntry replaced
            schema:
              $ref: '#/definitions/peer_entry'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/peer_entry'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a peer_entry
        tags:
        - PeerEntry
  /services/haproxy/configuration/backends:
      get:
        description: Returns an array of all configured backends.
        operationId: getBackends
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/backends'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of backends
        tags:
        - Backend
      post:
        description: Adds a new backend to the configuration file.
        operationId: createBackend
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Backend created
            schema:
              $ref: '#/definitions/backend'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/backend'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a backend
        tags:
        - Backend
  /services/haproxy/configuration/backends/{name}:
      delete:
        description: Deletes a backend from the configuration by it's name.
        operationId: deleteBackend
        parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Backend deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a backend
        tags:
        - Backend
      get:
        description: Returns one backend configuration by it's name.
        operationId: getBackend
        parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/backend'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a backend
        tags:
        - Backend
      put:
        description: Replaces a backend configuration by it's name.
        operationId: replaceBackend
        parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Backend replaced
            schema:
              $ref: '#/definitions/backend'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/backend'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a backend
        tags:
        - Backend
  /services/haproxy/configuration/binds:
      get:
        description: Returns an array of all binds that are configured in specified frontend.
        operationId: getBinds
        parameters:
        - description: Parent frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/binds'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of binds
        tags:
        - Bind
      post:
        description: Adds a new bind in the specified frontend in the configuration file.
        operationId: createBind
        parameters:
        - description: Parent frontend name
          in: query
          name: frontend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Bind created
            schema:
              $ref: '#/definitions/bind'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/bind'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new bind
        tags:
        - Bind
  /services/haproxy/configuration/binds/{name}:
      delete:
        description: Deletes a bind configuration by it's name in the specified frontend.
        operationId: deleteBind
        parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - description: Parent frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Bind deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a bind
        tags:
        - Bind
      get:
        description: Returns one bind configuration by it's name in the specified frontend.
        operationId: getBind
        parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - description: Parent frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/bind'
              type: object
          "404":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one bind
        tags:
        - Bind
      put:
        description: Replaces a bind configuration by it's name in the specified frontend.
        operationId: replaceBind
        parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - description: Parent frontend name
          in: query
          name: frontend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Bind replaced
            schema:
              $ref: '#/definitions/bind'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/bind'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a bind
        tags:
        - Bind
  /services/haproxy/configuration/servers:
      get:
        description: Returns an array of all servers that are configured in specified backend.
        operationId: getServers
        parameters:
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/servers'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of servers
        tags:
        - Server
      post:
        description: Adds a new server in the specified backend in the configuration file.
        operationId: createServer
        parameters:
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Server created
            schema:
              $ref: '#/definitions/server'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/server'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new server
        tags:
        - Server
  /services/haproxy/configuration/servers/{name}:
      delete:
        description: Deletes a server configuration by it's name in the specified backend.
        operationId: deleteServer
        parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Server deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a server
        tags:
        - Server
      get:
        description: Returns one server configuration by it's name in the specified backend.
        operationId: getServer
        parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/server'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one server
        tags:
        - Server
      put:
        description: Replaces a server configuration by it's name in the specified backend.
        operationId: replaceServer
        parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Server replaced
            schema:
              $ref: '#/definitions/server'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/server'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a server
        tags:
        - Server
  /services/haproxy/configuration/http_request_rules:
      get:
        description: Returns all HTTP Request Rules that are configured in specified parent.
        operationId: getHTTPRequestRules
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/http_request_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all HTTP Request Rules
        tags:
        - HTTPRequestRule
      post:
        description: Adds a new HTTP Request Rule of the specified type in the specified
          parent.
        operationId: createHTTPRequestRule
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: HTTP Request Rule created
            schema:
              $ref: '#/definitions/http_request_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/http_request_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new HTTP Request Rule
        tags:
        - HTTPRequestRule
  /services/haproxy/configuration/http_request_rules/{index}:
      delete:
        description: Deletes a HTTP Request Rule configuration by it's index from the specified
          parent.
        operationId: deleteHTTPRequestRule
        parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: HTTP Request Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a HTTP Request Rule
        tags:
        - HTTPRequestRule
      get:
        description: Returns one HTTP Request Rule configuration by it's index in the specified
          parent.
        operationId: getHTTPRequestRule
        parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/http_request_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one HTTP Request Rule
        tags:
        - HTTPRequestRule
      put:
        description: Replaces a HTTP Request Rule configuration by it's index in the specified
          parent.
        operationId: replaceHTTPRequestRule
        parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: HTTP Request Rule replaced
            schema:
              $ref: '#/definitions/http_request_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/http_request_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a HTTP Request Rule
        tags:
        - HTTPRequestRule
  /services/haproxy/configuration/http_response_rules:
      get:
        description: Returns all HTTP Response Rules that are configured in specified parent.
        operationId: getHTTPResponseRules
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/http_response_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all HTTP Response Rules
        tags:
        - HTTPResponseRule
      post:
        description: Adds a new HTTP Response Rule of the specified type in the specified
          parent.
        operationId: createHTTPResponseRule
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: HTTP Response Rule created
            schema:
              $ref: '#/definitions/http_response_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/http_response_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new HTTP Response Rule
        tags:
        - HTTPResponseRule
  /services/haproxy/configuration/http_response_rules/{index}:
      delete:
        description: Deletes a HTTP Response Rule configuration by it's index from the specified
          parent.
        operationId: deleteHTTPResponseRule
        parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: HTTP Response Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a HTTP Response Rule
        tags:
        - HTTPResponseRule
      get:
        description: Returns one HTTP Response Rule configuration by it's index in the specified
          parent.
        operationId: getHTTPResponseRule
        parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/http_response_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one HTTP Response Rule
        tags:
        - HTTPResponseRule
      put:
        description: Replaces a HTTP Response Rule configuration by it's index in the specified
          parent.
        operationId: replaceHTTPResponseRule
        parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: HTTP Response Rule replaced
            schema:
              $ref: '#/definitions/http_response_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/http_response_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a HTTP Response Rule
        tags:
        - HTTPResponseRule
  /services/haproxy/configuration/tcp_request_rules:
      get:
        description: Returns all TCP Request Rules that are configured in specified parent
          and parent type.
        operationId: getTCPRequestRules
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/tcp_request_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all TCP Request Rules
        tags:
        - TCPRequestRule
      post:
        description: Adds a new TCP Request Rule of the specified type in the specified
          parent.
        operationId: createTCPRequestRule
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: TCP Request Rule created
            schema:
              $ref: '#/definitions/tcp_request_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/tcp_request_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new TCP Request Rule
        tags:
        - TCPRequestRule
  /services/haproxy/configuration/tcp_request_rules/{index}:
      delete:
        description: Deletes a TCP Request Rule configuration by it's index from the specified
          parent.
        operationId: deleteTCPRequestRule
        parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: TCP Request Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a TCP Request Rule
        tags:
        - TCPRequestRule
      get:
        description: Returns one TCP Request Rule configuration by it's index in the specified
          parent.
        operationId: getTCPRequestRule
        parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/tcp_request_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one TCP Request Rule
        tags:
        - TCPRequestRule
      put:
        description: Replaces a TCP Request Rule configuration by it's index in the specified
          parent.
        operationId: replaceTCPRequestRule
        parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: TCP Request Rule replaced
            schema:
              $ref: '#/definitions/tcp_request_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/tcp_request_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a TCP Request Rule
        tags:
        - TCPRequestRule
  /services/haproxy/configuration/tcp_response_rules:
      get:
        description: Returns all TCP Response Rules that are configured in specified backend.
        operationId: getTCPResponseRules
        parameters:
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/tcp_response_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all TCP Response Rules
        tags:
        - TCPResponseRule
      post:
        description: Adds a new TCP Response Rule of the specified type in the specified
          backend.
        operationId: createTCPResponseRule
        parameters:
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: TCP Response Rule created
            schema:
              $ref: '#/definitions/tcp_response_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/tcp_response_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new TCP Response Rule
        tags:
        - TCPResponseRule
  /services/haproxy/configuration/tcp_response_rules/{index}:
      delete:
        description: Deletes a TCP Response Rule configuration by it's index from the specified
          backend.
        operationId: deleteTCPResponseRule
        parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: TCP Response Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a TCP Response Rule
        tags:
        - TCPResponseRule
      get:
        description: Returns one TCP Response Rule configuration by it's index in the specified
          backend.
        operationId: getTCPResponseRule
        parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/tcp_response_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one TCP Response Rule
        tags:
        - TCPResponseRule
      put:
        description: Replaces a TCP Response Rule configuration by it's Index in the specified
          backend.
        operationId: replaceTCPResponseRule
        parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: TCP Response Rule replaced
            schema:
              $ref: '#/definitions/tcp_response_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/tcp_response_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a TCP Response Rule
        tags:
        - TCPResponseRule
  /services/haproxy/configuration/backend_switching_rules:
      get:
        description: Returns all Backend Switching Rules that are configured in specified
          frontend.
        operationId: getBackendSwitchingRules
        parameters:
        - description: Frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/backend_switching_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all Backend Switching Rules
        tags:
        - BackendSwitchingRule
      post:
        description: Adds a new Backend Switching Rule of the specified type in the specified
          frontend.
        operationId: createBackendSwitchingRule
        parameters:
        - description: Frontend name
          in: query
          name: frontend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Backend Switching Rule created
            schema:
              $ref: '#/definitions/backend_switching_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/backend_switching_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Backend Switching Rule
        tags:
        - BackendSwitchingRule
  /services/haproxy/configuration/backend_switching_rules/{index}:
      delete:
        description: Deletes a Backend Switching Rule configuration by it's index from the
          specified frontend.
        operationId: deleteBackendSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Backend Switching Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Backend Switching Rule
        tags:
        - BackendSwitchingRule
      get:
        description: Returns one Backend Switching Rule configuration by it's index in the
          specified frontend.
        operationId: getBackendSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Frontend name
          in: query
          name: frontend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/backend_switching_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Backend Switching Rule
        tags:
        - BackendSwitchingRule
      put:
        description: Replaces a Backend Switching Rule configuration by it's index in the
          specified frontend.
        operationId: replaceBackendSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Frontend name
          in: query
          name: frontend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Backend Switching Rule replaced
            schema:
              $ref: '#/definitions/backend_switching_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/backend_switching_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Backend Switching Rule
        tags:
        - BackendSwitchingRule
  /services/haproxy/configuration/server_switching_rules:
      get:
        description: Returns all Backend Switching Rules that are configured in specified
          backend.
        operationId: getServerSwitchingRules
        parameters:
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/server_switching_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all Server Switching Rules
        tags:
        - ServerSwitchingRule
      post:
        description: Adds a new Server Switching Rule of the specified type in the specified
          backend.
        operationId: createServerSwitchingRule
        parameters:
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Server Switching Rule created
            schema:
              $ref: '#/definitions/server_switching_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/server_switching_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Server Switching Rule
        tags:
        - ServerSwitchingRule
  /services/haproxy/configuration/server_switching_rules/{index}:
      delete:
        description: Deletes a Server Switching Rule configuration by it's index from the
          specified backend.
        operationId: deleteServerSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Server Switching Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Server Switching Rule
        tags:
        - ServerSwitchingRule
      get:
        description: Returns one Server Switching Rule configuration by it's index in the
          specified backend.
        operationId: getServerSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/server_switching_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Server Switching Rule
        tags:
        - ServerSwitchingRule
      put:
        description: Replaces a Server Switching Rule configuration by it's index in the
          specified backend.
        operationId: replaceServerSwitchingRule
        parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Server Switching Rule replaced
            schema:
              $ref: '#/definitions/server_switching_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/server_switching_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Server Switching Rule
        tags:
        - ServerSwitchingRule
  /services/haproxy/configuration/filters:
      get:
        description: Returns all Filters that are configured in specified parent.
        operationId: getFilters
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/filters'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all Filters
        tags:
        - Filter
      post:
        description: Adds a new Filter of the specified type in the specified parent.
        operationId: createFilter
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Filter created
            schema:
              $ref: '#/definitions/filter'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/filter'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Filter
        tags:
        - Filter
  /services/haproxy/configuration/filters/{index}:
      delete:
        description: Deletes a Filter configuration by it's index from the specified parent.
        operationId: deleteFilter
        parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Filter deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Filter
        tags:
        - Filter
      get:
        description: Returns one Filter configuration by it's index in the specified parent.
        operationId: getFilter
        parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/filter'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Filter
        tags:
        - Filter
      put:
        description: Replaces a Filter configuration by it's index in the specified parent.
        operationId: replaceFilter
        parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Filter replaced
            schema:
              $ref: '#/definitions/filter'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/filter'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Filter
        tags:
        - Filter
  /services/haproxy/configuration/stick_rules:
      get:
        description: Returns all Stick Rules that are configured in specified backend.
        operationId: getStickRules
        parameters:
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/stick_rules'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all Stick Rules
        tags:
        - StickRule
      post:
        description: Adds a new Stick Rule of the specified type in the specified backend.
        operationId: createStickRule
        parameters:
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/stick_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Stick Rule created
            schema:
              $ref: '#/definitions/stick_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/stick_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Stick Rule
        tags:
        - StickRule
  /services/haproxy/configuration/stick_rules/{index}:
      delete:
        description: Deletes a Stick Rule configuration by it's index from the specified
          backend.
        operationId: deleteStickRule
        parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Stick Rule deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Stick Rule
        tags:
        - StickRule
      get:
        description: Returns one Stick Rule configuration by it's index in the specified
          backend.
        operationId: getStickRule
        parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/stick_rule'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Stick Rule
        tags:
        - StickRule
      put:
        description: Replaces a Stick Rule configuration by it's index in the specified
          backend.
        operationId: replaceStickRule
        parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - description: Backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/stick_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Stick Rule replaced
            schema:
              $ref: '#/definitions/stick_rule'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/stick_rule'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Stick Rule
        tags:
        - StickRule
  /services/haproxy/configuration/log_targets:
      get:
        description: Returns all Log Targets that are configured in specified parent.
        operationId: getLogTargets
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/log_targets'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all Log Targets
        tags:
        - LogTarget
      post:
        description: Adds a new Log Target of the specified type in the specified parent.
        operationId: createLogTarget
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Log Target created
            schema:
              $ref: '#/definitions/log_target'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/log_target'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new Log Target
        tags:
        - LogTarget
  /services/haproxy/configuration/log_targets/{index}:
      delete:
        description: Deletes a Log Target configuration by it's index from the specified
          parent.
        operationId: deleteLogTarget
        parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Log Target deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a Log Target
        tags:
        - LogTarget
      get:
        description: Returns one Log Target configuration by it's index in the specified
          parent.
        operationId: getLogTarget
        parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/log_target'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one Log Target
        tags:
        - LogTarget
      put:
        description: Replaces a Log Target configuration by it's index in the specified
          parent.
        operationId: replaceLogTarget
        parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Log Target replaced
            schema:
              $ref: '#/definitions/log_target'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/log_target'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a Log Target
        tags:
        - LogTarget
  /services/haproxy/configuration/acls:
      get:
        description: Returns all ACL lines that are configured in specified parent.
        operationId: getAcls
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/acls'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of all ACL lines
        tags:
        - ACL
      post:
        description: Adds a new ACL line of the specified type in the specified parent.
        operationId: createAcl
        parameters:
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: ACL line created
            schema:
              $ref: '#/definitions/acl'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/acl'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a new ACL line
        tags:
        - ACL
  /services/haproxy/configuration/acls/{index}:
      delete:
        description: Deletes a ACL line configuration by it's index from the specified parent.
        operationId: deleteAcl
        parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: ACL line deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a ACL line
        tags:
        - ACL
      get:
        description: Returns one ACL line configuration by it's index in the specified parent.
        operationId: getAcl
        parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/acl'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one ACL line
        tags:
        - ACL
      put:
        description: Replaces a ACL line configuration by it's index in the specified parent.
        operationId: replaceAcl
        parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - description: Parent name
          in: query
          name: parent_name
          required: true
          type: string
        - description: Parent type
          enum:
          - frontend
          - backend
          in: query
          name: parent_type
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: ACL line replaced
            schema:
              $ref: '#/definitions/acl'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/acl'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a ACL line
        tags:
        - ACL
  /services/haproxy/configuration/resolvers:
      get:
        description: Returns an array of all configured resolvers.
        operationId: getResolvers
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/resolvers'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of resolvers
        tags:
        - Resolver
      post:
        description: Adds a new resolver section to the configuration file.
        operationId: createResolver
        parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/resolver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Resolver created
            schema:
              $ref: '#/definitions/resolver'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/resolver'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a resolver
        tags:
        - Resolver
  /services/haproxy/configuration/resolvers/{name}:
      delete:
        description: Deletes a resolver from the configuration by it's name.
        operationId: deleteResolver
        parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Resolver deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a resolver
        tags:
        - Resolver
      get:
        description: Returns one resolver section configuration by it's name.
        operationId: getResolver
        parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/resolver'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a resolver
        tags:
        - Resolver
      put:
        description: Replaces a resolver configuration by it's name.
        operationId: replaceResolver
        parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/resolver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Resolver replaced
            schema:
              $ref: '#/definitions/resolver'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/resolver'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a resolver
        tags:
        - Resolver
  /services/haproxy/configuration/nameservers:
      get:
        description: Returns an array of all configured nameservers.
        operationId: getNameservers
        parameters:
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/nameservers'
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of nameservers
        tags:
        - Nameserver
      post:
        description: Adds a new nameserver to the resolvers section.
        operationId: createNameserver
        parameters:
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/nameserver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Nameserver created
            schema:
              $ref: '#/definitions/nameserver'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/nameserver'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Add a nameserver
        tags:
        - Nameserver
  /services/haproxy/configuration/nameservers/{name}:
      delete:
        description: Deletes a nameserver from the resolvers section by it's name.
        operationId: deleteNameserver
        parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
          "204":
            description: Nameserver deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Delete a nameserver
        tags:
        - Nameserver
      get:
        description: Returns one nameserver configuration by it's name.
        operationId: getNameserver
        parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Successful operation
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  $ref: '#/definitions/nameserver'
              type: object
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a nameserver
        tags:
        - Nameserver
      put:
        description: Replaces a nameserver configuration by it's name.
        operationId: replaceNameserver
        parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/nameserver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        responses:
          "200":
            description: Nameserver replaced
            schema:
              $ref: '#/definitions/nameserver'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/nameserver'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace a nameserver
        tags:
        - Nameserver
  /services/haproxy/configuration/raw:
      get:
        description: Returns HAProxy configuration file in plain text
        operationId: getHAProxyConfiguration
        parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        produces:
        - application/json
        responses:
          "200":
            description: Operation successful
            headers:
              Configuration-Version:
                description: Configuration file version
                type: integer
                x-nullable: false
            schema:
              properties:
                _version:
                  type: integer
                data:
                  type: string
              required:
              - data
              type: object
          default:
            $ref: '#/responses/DefaultError'
        summary: Return HAProxy configuration
        tags:
        - Configuration
      post:
        consumes:
        - text/plain
        description: Push a new haproxy configuration file in plain text
        operationId: postHAProxyConfiguration
        parameters:
        - in: body
          name: data
          required: true
          schema:
            type: string
        - default: false
          description: If set, no version check will be done and the pushed config will
            be enforced
          in: query
          name: skip_version
          required: false
          type: boolean
        - default: false
          description: If set, no reload will be initiated and runtime actions from X-Runtime-Actions
            will be applied
          in: query
          name: skip_reload
          required: false
          type: boolean
        - default: false
          description: If set, only validates configuration, without applying it
          in: query
          name: only_validate
          required: false
          type: boolean
        - description: List of Runtime API commands with parameters separated by ';'
          in: header
          name: X-Runtime-Actions
          required: false
          type: string
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        produces:
        - application/json
        responses:
          "201":
            description: New HAProxy configuration pushed
            schema:
              type: string
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              type: string
          "400":
            $ref: '#/responses/BadRequest'
          default:
            $ref: '#/responses/DefaultError'
        summary: Push new haproxy configuration
        tags:
        - Configuration
  /services/haproxy/runtime:
      get:
        description: Returns a list of endpoints to be used for advanced runtime settings
          of HAProxy objects.
        operationId: getRuntimeEndpoints
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/endpoints'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return list of HAProxy advanced runtime endpoints
        tags:
        - Discovery
  /services/haproxy/runtime/info:
      get:
        description: Return HAProxy process information
        operationId: getHaproxyProcessInfo
        produces:
        - application/json
        responses:
          "200":
            description: Success
            schema:
              $ref: '#/definitions/process_infos'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return HAProxy process information
        tags:
        - Information
  /services/haproxy/runtime/servers:
      get:
        description: Returns an array of all servers' runtime settings.
        operationId: getRuntimeServers
        parameters:
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/runtime_servers'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return an array of runtime servers' settings
        tags:
        - Server
  /services/haproxy/runtime/servers/{name}:
      get:
        description: Returns one server runtime settings by it's name in the specified backend.
        operationId: getRuntimeServer
        parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/runtime_server'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one server runtime settings
        tags:
        - Server
      put:
        description: Replaces a server transient settings by it's name in the specified
          backend.
        operationId: replaceRuntimeServer
        parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - description: Parent backend name
          in: query
          name: backend
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/runtime_server'
        responses:
          "200":
            description: Server transient settings replaced
            schema:
              $ref: '#/definitions/runtime_server'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace server transient settings
        tags:
        - Server
  /services/haproxy/runtime/stick_tables:
      get:
        description: Returns an array of all stick tables.
        operationId: getStickTables
        parameters:
        - description: Process number if master-worker mode, if not all processes are returned
          in: query
          name: process
          type: integer
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/stick_tables'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return Stick Tables
        tags:
        - StickTable
  /services/haproxy/runtime/stick_tables/{name}:
      get:
        description: Returns one stick table from runtime.
        operationId: getStickTable
        parameters:
        - description: Stick table name
          in: path
          name: name
          required: true
          type: string
        - description: Process number if master-worker mode, if not only first process is
            returned
          in: query
          name: process
          required: true
          type: integer
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/stick_table'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return Stick Table
        tags:
        - StickTable
  /services/haproxy/runtime/stick_table_entries:
      get:
        description: Returns an array of all entries in a given stick tables.
        operationId: getStickTableEntries
        parameters:
        - description: Stick table name
          in: query
          name: stick_table
          required: true
          type: string
        - description: Process number if master-worker mode, if not only first process is
            returned
          in: query
          name: process
          required: true
          type: integer
        - description: A list of filters in format data.<type> <operator> <value> separated
            by comma
          in: query
          name: filter
          type: string
        - description: Key which we want the entries for
          in: query
          name: key
          type: string
        - description: Max number of entries to be returned for pagination
          in: query
          name: count
          type: integer
        - description: Offset which indicates how many items we skip in pagination
          in: query
          name: offset
          type: integer
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/stick_table_entries'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return Stick Table Entries
        tags:
        - StickTable
  /services/haproxy/runtime/maps:
      get:
        description: Returns all available map files.
        operationId: getAllRuntimeMapFiles
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/maps'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return all available map files
        tags:
        - Maps
      post:
        consumes:
        - multipart/form-data
        description: Creates runtime map file with its entries.
        operationId: createRuntimeMap
        parameters:
        - description: The map file to upload
          in: formData
          name: fileUpload
          type: file
          x-mimetype: text/plain
        - $ref: '#/parameters/force_reload'
        responses:
          "201":
            description: Map file created with its entries
            schema:
              $ref: '#/definitions/map'
          "202":
            description: Configuration change accepted and reload requested
            headers:
              Reload-ID:
                description: ID of the requested reload
                type: string
            schema:
              $ref: '#/definitions/map'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Creates runtime map file with its entries
        tags:
        - Maps
  /services/haproxy/runtime/maps/{name}:
      delete:
        description: Remove all map entries from the map file.
        operationId: clearRuntimeMap
        parameters:
        - description: Map file name
          in: path
          name: name
          required: true
          type: string
        - description: If true, deletes file from disk
          in: query
          name: forceDelete
          type: boolean
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: forceSync
          type: boolean
        responses:
          "204":
            description: All map entries deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Remove all map entries from the map file
        tags:
        - Maps
      get:
        description: Returns one runtime map file.
        operationId: getOneRuntimeMap
        parameters:
        - description: Map file name
          in: path
          name: name
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/map'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one runtime map file
        tags:
        - Maps
  /services/haproxy/runtime/maps_entries:
      get:
        description: Returns an array of all entries in a given runtime map file.
        operationId: showRuntimeMap
        parameters:
        - description: Map file name
          in: query
          name: map
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/map_entries'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one map runtime entries
        tags:
        - Maps
      post:
        description: Adds an entry into the map file.
        operationId: addMapEntry
        parameters:
        - description: Map file name
          in: query
          name: map
          required: true
          type: string
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: forceSync
          type: boolean
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/map_entry'
        responses:
          "201":
            description: Map entry created
            schema:
              $ref: '#/definitions/map_entry'
          "400":
            $ref: '#/responses/BadRequest'
          "409":
            $ref: '#/responses/AlreadyExists'
          default:
            $ref: '#/responses/DefaultError'
        summary: Adds an entry into the map file
        tags:
        - Maps
  /services/haproxy/runtime/maps_entries/{id}:
      delete:
        description: Delete all the map entries from the map by its id.
        operationId: deleteRuntimeMapEntry
        parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - description: Map file name
          in: query
          name: map
          required: true
          type: string
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: forceSync
          type: boolean
        responses:
          "204":
            description: Map key/value deleted
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Deletes all the map entries from the map by its id
        tags:
        - Maps
      get:
        description: Returns one map runtime setting by it's id.
        operationId: getRuntimeMapEntry
        parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - description: Map file name
          in: query
          name: map
          required: true
          type: string
        responses:
          "200":
            description: Successful operation
            schema:
              $ref: '#/definitions/map_entry'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return one map runtime setting
        tags:
        - Maps
      put:
        description: Replaces the value corresponding to each id in a map.
        operationId: replaceRuntimeMapEntry
        parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - description: Map file name
          in: query
          name: map
          required: true
          type: string
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: forceSync
          type: boolean
        - in: body
          name: data
          required: true
          schema:
            properties:
              value:
                description: Map value
                type: string
            required:
            - value
            type: object
        responses:
          "200":
            description: Map value replaced
            schema:
              $ref: '#/definitions/map_entry'
          "400":
            $ref: '#/responses/BadRequest'
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Replace the value corresponding to each id in a map
        tags:
        - Maps
  /services/haproxy/configuration/version:
      get:
        description: Returns configuration version.
        operationId: getConfigurationVersion
        parameters:
        - $ref: '#/parameters/transaction_id'
        responses:
          "200":
            description: Configuration version
            schema:
              type: integer
          "404":
            $ref: '#/responses/NotFound'
          default:
            $ref: '#/responses/DefaultError'
        summary: Return a configuration version
        tags:
        - Configuration

